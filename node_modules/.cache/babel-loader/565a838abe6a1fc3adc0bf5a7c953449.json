{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/barco/Desktop/sites/tests/dnd-tests/test6/hue-stage/client/src/Set/Set.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { set, currentEditorState } from './data';\nimport StateCreator from './StateCreator.jsx';\nimport './Set.css';\nimport { bridge } from './bridge';\nimport SetControls from './set-controls.jsx';\nimport { State } from './state-model';\nimport { SetContext } from '../SetContext';\nimport styled from 'styled-components';\n\nfunction Set() {\n  _s();\n\n  let {\n    globalSetData,\n    setGlobalSetData\n  } = useContext(SetContext);\n  let setRef = set;\n  let [lines, setLines] = useState([...set]);\n  let [didLoad, setDidLoad] = useState(false);\n  useEffect(() => {\n    bridge.connect().then(() => {\n      bridge.loadLights().then(() => {\n        setDidLoad(true);\n        setLines([...set]);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }, []);\n\n  const HueState = props => {\n    const state = props.state;\n    const style = {\n      backgroundColor: `hsl(${state.UIhue}, ${state.UIsat}%, ${state.UIbri - state.UIsat * state.UIbri / 200}%)`,\n      height: '100px',\n      width: `${state.duration * 100}px`,\n      borderRadius: '5px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, state.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Grid = props => {\n    let states = props.light.gridStates;\n    return states.map((state, index) => {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: state.id,\n        index: index,\n        type: \"STATE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          className: \"draggable-state\",\n          children: /*#__PURE__*/_jsxDEV(HueState, {\n            state: state\n          }, state.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, `${state.id}-${props.light.name}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const Light = props => {\n    const light = props.light;\n    const style = {\n      width: '100px',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: light.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, light.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Line = props => {\n    const style = {\n      display: 'flex',\n      borderBottom: '1px solid #2f2f2f',\n      backgroundColor: '#222',\n      borderRadius: '20px'\n    };\n    const gridStyle = {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      width: '100%'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(Light, {\n        light: props.light\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.light.id,\n        direction: \"horizontal\",\n        type: \"STATE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: gridStyle,\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            light: props.light\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n\n  const LineStack = () => {\n    console.log(lines);\n    return lines.map((light, index) => {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: light.id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            light: light\n          }, light.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, light.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if (source.droppableId === \"viewer\") {\n      const newLines = [...lines];\n      const light = newLines.find(light => light.id === destination.droppableId);\n      const c = currentEditorState;\n      let newState = new State(c.UIhue, c.UIsat, c.UIbri, c.transitiontime, c.on, c.duration);\n      light.gridStates.splice(destination.index, 0, newState);\n      setRef = [...newLines];\n      setLines([...newLines]);\n      return;\n    }\n\n    if (result.type === \"STATE\") {\n      const newLines = [...lines];\n      const startingLine = newLines.find(light => light.id === source.droppableId);\n      const endingLine = newLines.find(light => light.id === destination.droppableId);\n      const draggedState = startingLine.gridStates.find(state => state.id === draggableId);\n      startingLine.gridStates.splice(source.index, 1);\n      endingLine.gridStates.splice(destination.index, 0, draggedState);\n      setRef = [...newLines];\n      setLines([...newLines]);\n    } else if (result.type === \"LINE\") {\n      const newLines = [...lines];\n      const draggedLine = newLines.splice(source.index, 1)[0];\n      newLines.splice(destination.index, 0, draggedLine);\n      setRef = [...newLines];\n      setLines([...newLines]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Set\",\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(SetControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StateCreator, {\n        lights: lines,\n        didLoad: didLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"linestack\",\n        type: \"LINE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(LineStack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Set, \"7qIrOi+u5XN1IsoyZA754MMoAyc=\");\n\n_c = Set;\nexport default Set;\nlet Background = styled.div`\n  overflow: hidden;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0,0,0,0.3);\n`;\n_c2 = Background;\nlet LoadDialog = styled.div`\n\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Set\");\n$RefreshReg$(_c2, \"Background\");","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/hue-stage/client/src/Set/Set.js"],"names":["React","useState","useEffect","useContext","DragDropContext","Draggable","Droppable","set","currentEditorState","StateCreator","bridge","SetControls","State","SetContext","styled","Set","globalSetData","setGlobalSetData","setRef","lines","setLines","didLoad","setDidLoad","connect","then","loadLights","catch","err","console","log","HueState","props","state","style","backgroundColor","UIhue","UIsat","UIbri","height","width","duration","borderRadius","id","Grid","states","light","gridStates","map","index","provided","innerRef","draggableProps","dragHandleProps","name","Light","display","justifyContent","alignItems","color","Line","borderBottom","gridStyle","droppableProps","placeholder","LineStack","onDragEnd","result","destination","source","draggableId","droppableId","newLines","find","c","newState","transitiontime","on","splice","type","startingLine","endingLine","draggedState","draggedLine","Background","div","LoadDialog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport { set, currentEditorState } from './data'\nimport StateCreator from './StateCreator.jsx'\nimport './Set.css'\nimport { bridge } from './bridge'\nimport SetControls from './set-controls.jsx'\nimport { State } from './state-model'\nimport { SetContext } from '../SetContext'\nimport styled from 'styled-components';\n\n\nfunction Set() {\n\n  let {globalSetData, setGlobalSetData} = useContext(SetContext);\n\n  let setRef = set;\n  let [lines, setLines] = useState([...set])\n  let [didLoad, setDidLoad] = useState(false)\n\n  useEffect(() => {\n\n    bridge.connect().then(()=>{\n        bridge.loadLights().then(() => {\n            setDidLoad(true);\n            setLines([...set]);\n        }).catch(err => {\n          console.log(err);\n        })\n    })\n\n}, [])\n\n  \n  const HueState = (props) => {\n\n    const state = props.state\n\n    const style = {\n      backgroundColor: `hsl(${state.UIhue}, ${state.UIsat}%, ${(state.UIbri - state.UIsat*state.UIbri/200)}%)`,\n      height: '100px',\n      width: `${state.duration * 100}px`,\n      borderRadius: '5px'\n    }\n\n    return (\n      <div key={state.id} style={style}></div>\n    )\n\n  }\n\n  const Grid = (props) => {\n\n    let states = props.light.gridStates\n\n    return states.map((state,index) => {\n\n      return (\n\n        <Draggable key={`${state.id}-${props.light.name}`} draggableId={state.id} index={index} type=\"STATE\">\n          {(provided)=>(\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"draggable-state\">\n              <HueState key={state.id} state={state}/>\n            </div>\n          )}\n        </Draggable>\n      )\n\n    })\n\n  }\n\n  const Light = (props) => {\n\n    const light = props.light\n\n    const style = {\n      width: '100px',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white',\n\n    }\n\n    return (\n      <div style={style} key={light.id}>\n        <h3>{light.name}</h3>\n      </div>\n    )\n\n  }\n\n  const Line = (props) => {\n\n    const style = {\n      display: 'flex',\n      borderBottom: '1px solid #2f2f2f',\n      backgroundColor: '#222',\n      borderRadius: '20px'\n    }\n\n    const gridStyle = {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      width: '100%'\n    }\n\n    return (\n      <div style={style} >\n        <Light light={props.light}/>\n        <Droppable droppableId={props.light.id} direction=\"horizontal\" type=\"STATE\">\n        {(provided) => (\n          <div style={gridStyle} ref={provided.innerRef} {...provided.droppableProps}>\n            <Grid light={props.light}/>\n            {provided.placeholder}\n          </div>\n        )}\n        </Droppable>\n      </div>\n    )\n\n  }\n\n  const LineStack = () => {\n\n    console.log(lines);\n\n\n    return lines.map((light, index) => {\n\n      return (\n        <Draggable key={light.name} draggableId={light.id} index={index}>\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n              <Line key={light.name} light={light}/>\n            </div>\n          )}\n        </Draggable>\n\n      )\n\n    })\n\n\n  }\n\n\n  const onDragEnd = (result) => {\n\n    const {destination, source, draggableId} = result;\n\n    if(!destination) {\n      return;\n    }\n\n    if(destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if(source.droppableId === \"viewer\") {\n      const newLines = [...lines]\n      const light = newLines.find(light => light.id === destination.droppableId)\n      const c = currentEditorState;\n      let newState = new State(c.UIhue, c.UIsat, c.UIbri, c.transitiontime, c.on, c.duration);\n      light.gridStates.splice(destination.index, 0, newState);\n      setRef = [...newLines]\n      setLines([...newLines])\n      return;\n    }\n    \n    if(result.type === \"STATE\") {\n      \n      const newLines = [...lines];\n\n      const startingLine = newLines.find(light => light.id === source.droppableId);\n      const endingLine = newLines.find(light => light.id === destination.droppableId);\n\n      const draggedState = startingLine.gridStates.find(state => state.id === draggableId)\n\n      startingLine.gridStates.splice(source.index, 1);\n      endingLine.gridStates.splice(destination.index, 0, draggedState);\n\n      setRef = [...newLines];\n      setLines([...newLines])\n      \n    } else if (result.type === \"LINE\") {\n\n      const newLines = [...lines]\n\n      const draggedLine = newLines.splice(source.index, 1)[0];\n      newLines.splice(destination.index, 0, draggedLine);\n      \n      setRef = [...newLines];\n      setLines([...newLines]);\n      \n      \n    }\n  \n  }\n\n\n  return (\n    <div className=\"Set\">\n    <Background></Background>\n\n    <DragDropContext onDragEnd={onDragEnd}>\n\n      <SetControls />\n      \n      <StateCreator lights={lines} didLoad={didLoad} />\n\n      <Droppable droppableId=\"linestack\" type=\"LINE\">\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps}>\n          <LineStack/>\n          {provided.placeholder}\n        </div>\n      )}\n      </Droppable>\n\n    </DragDropContext>\n      \n    </div>\n  );\n}\n\n\nexport default Set;\n\n\nlet Background = styled.div`\n  overflow: hidden;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0,0,0,0.3);\n`\n\nlet LoadDialog = styled.div`\n\n`\n\n"]},"metadata":{},"sourceType":"module"}