{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/barco/Desktop/sites/tests/dnd-tests/test6/hue-stage/client/src/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Nav from '../Nav/Nav';\nimport { UserContext } from '../UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport AddIcon from \"../resources/add-black-18dp.svg\";\nimport CloseIcon from \"../resources/clear-black-18dp.svg\";\nimport EditIcon from \"../resources/create-black-18dp.svg\";\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  _s();\n\n  let {\n    user,\n    setUser\n  } = useContext(UserContext);\n  let [showDialog, setShowDialog] = useState(false);\n  let [newSetName, setNewSetName] = useState({\n    name: 'new set'\n  });\n  let [timingMethod, setTimingMethod] = useState('time');\n  let history = useHistory();\n  if (!user.loggedIn) history.push('/auth/login');\n\n  let loadUser = async () => {\n    await axios.get('http://localhost:5000/api/user/profile', {\n      headers: {\n        auth_token: localStorage.getItem(\"user_auth_token\")\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  loadUser();\n\n  let handleChange = e => {\n    setNewSetName({\n      name: e.target.value\n    });\n  };\n\n  let changeTimeMethod = e => {\n    setTimingMethod(e.target.id);\n  };\n\n  let generateSet = () => {\n    history.push('/dashboard/set');\n  };\n\n  let SetDialog = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CloseModal, {\n        id: \"close-modal\",\n        src: CloseIcon,\n        alt: \"close set dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(SetName, {\n          type: \"text\",\n          onBlur: handleChange,\n          defaultValue: newSetName.name,\n          onFocus: e => e.target.select()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Edit, {\n          src: EditIcon,\n          alt: \"edit set name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MethodPicker, {\n        children: [/*#__PURE__*/_jsxDEV(TimeMethod, {\n          id: \"time\",\n          onClick: changeTimeMethod,\n          selected: timingMethod === 'time' ? true : false,\n          children: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TimeMethod, {\n          id: \"tempo\",\n          onClick: changeTimeMethod,\n          selected: timingMethod === 'tempo' ? true : false,\n          children: \"tempo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CreateSet, {\n        onClick: generateSet,\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  };\n\n  let handleClick = e => {\n    if (e.target.id === \"set-dialog-modal-background\" || e.target.id === \"close-modal\") setShowDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(Welcome, {\n        children: [\"hi, \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/account/user\",\n          children: \"parishilton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sets, {\n        children: /*#__PURE__*/_jsxDEV(AddSet, {\n          onClick: () => {\n            setShowDialog(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: AddIcon,\n            alt: \"New Set\",\n            width: \"40px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"new set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), showDialog ? /*#__PURE__*/_jsxDEV(Background, {\n        id: \"set-dialog-modal-background\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          children: /*#__PURE__*/_jsxDEV(SetDialog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"/f4zaXnzceEEPjeV3fhDApIB6+0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`;\n_c2 = Page;\nconst Header = styled.h1`\n    color: deeppink;\n    font-weight: 300;\n    letter-spacing: 1px;\n    font-weight: 800;\n    padding-top: 80px;\n    padding-bottom: 40px;\n    text-align: center;\n`;\n_c3 = Header;\nconst Welcome = styled.h1`\n    font-weight: 300;\n    padding-top: 100px;\n    text-align: center;\n    & > * {\n        text-decoration: none;\n        color: white;\n        &:hover {\n            color: deeppink;\n        }\n    }\n`;\n_c4 = Welcome;\nlet Sets = styled.div`\n    width: 80vw;\n    height: 60vh;\n    background-color: rgba(255,255,255,0.05);\n    border-radius: 30px;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n`;\n_c5 = Sets;\nlet Label = styled.h4`\n    position: absolute;\n    bottom: -30px;\n    \n`;\n_c6 = Label;\nlet AddSet = styled.div`\n    position: relative;\n    width: 150px;\n    height: 100px;\n    margin: 30px;\n    border: 1px solid white;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    cursor: pointer;\n    &:hover {\n        background-color: rgba(255,255,255,0.2);\n    }\n`;\n_c7 = AddSet;\nlet Background = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n_c8 = Background;\nlet modalAnimation = keyframes`\n    0% {\n        opacity: 0%;\n        transform: translateY(400px);\n    }\n    100% {\n        opacity: 100%;\n        transform: translateY(0px);\n    }\n`;\nlet Modal = styled.div`\n    animation-name: ${modalAnimation};\n    animation-duration: 300ms;\n    animation-iteration-count: 1;\n    & > * {\n        position: relative;\n        width: 30vw;\n        height: 25vh;\n        border-radius: 10px;\n        background-color: #222;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n\n    }\n`;\n_c9 = Modal;\nlet SetName = styled.input`\n    color: #fff;\n    width: 15vw;\n    min-width: 200px;\n    font-size: 1rem;\n    background-color: #222;\n    padding: 10px;\n    margin: 10px;\n    border-radius: 3px;\n    border: none;\n    text-align: center;\n    transition: all 200ms;\n    z-index: 1;\n    background-color: rgba(255,255,255,0.1);\n\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid white;\n        background-color: rgba(255,255,255,0.4);\n    }\n\n    &::placeholder {\n        color: #fff;\n    }\n`;\n_c10 = SetName;\nlet MethodPicker = styled.div`\n    display: flex;\n`;\n_c11 = MethodPicker;\nlet TimeMethod = styled.div`\n    background-color: ${props => props.selected ? 'rgba(3,252,194,0.5)' : '#333'};\n    color:#fff;\n    height: 50px;\n    width: 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n        background-color: ${props => props.selected ? 'rgba(3,252,194,0.5)' : 'rgba(3,252,194,0.2)'};\n    }\n`;\n_c12 = TimeMethod;\nlet CloseModal = styled.img`\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    width: 30px;\n    &:hover {\n        background-color: rgba(255,255,255,0.3);\n        border-radius: 50%;\n    }\n`;\n_c13 = CloseModal;\nlet CreateSet = styled.div`\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    background-color: rgba(0,255,255,0.7);\n    color:#fff;\n    height: 50px;\n    width: 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n        background-color: rgba(0,255,255,0.2);\n    }\n`;\n_c14 = CreateSet;\nlet Input = styled.div`\n    position: relative;\n`;\n_c15 = Input;\nlet Edit = styled.img`\n    position: absolute;\n    right: 20px;\n    top: 35%;\n    width: 20px;\n    z-index: 0;\n`;\n_c16 = Edit;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"Page\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Welcome\");\n$RefreshReg$(_c5, \"Sets\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"AddSet\");\n$RefreshReg$(_c8, \"Background\");\n$RefreshReg$(_c9, \"Modal\");\n$RefreshReg$(_c10, \"SetName\");\n$RefreshReg$(_c11, \"MethodPicker\");\n$RefreshReg$(_c12, \"TimeMethod\");\n$RefreshReg$(_c13, \"CloseModal\");\n$RefreshReg$(_c14, \"CreateSet\");\n$RefreshReg$(_c15, \"Input\");\n$RefreshReg$(_c16, \"Edit\");","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/hue-stage/client/src/Dashboard/Dashboard.js"],"names":["React","useContext","useState","useEffect","styled","keyframes","Nav","UserContext","useHistory","Link","axios","Dashboard","user","setUser","showDialog","setShowDialog","newSetName","setNewSetName","name","timingMethod","setTimingMethod","history","loggedIn","push","loadUser","get","headers","auth_token","localStorage","getItem","then","res","console","log","handleChange","e","target","value","changeTimeMethod","id","generateSet","SetDialog","CloseIcon","select","EditIcon","handleClick","AddIcon","Page","div","Header","h1","Welcome","Sets","Label","h4","AddSet","Background","modalAnimation","Modal","SetName","input","MethodPicker","TimeMethod","props","selected","CloseModal","img","CreateSet","Input","Edit"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport Nav from '../Nav/Nav';\nimport { UserContext } from '../UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport AddIcon from '../resources/add-black-18dp.svg';\nimport CloseIcon from '../resources/clear-black-18dp.svg';\nimport EditIcon from '../resources/create-black-18dp.svg';\nimport axios from 'axios';\n\n\nconst Dashboard = () => {\n\n    let {user, setUser} = useContext(UserContext);\n\n    let [showDialog, setShowDialog] = useState(false);\n\n    let [newSetName, setNewSetName] = useState({name: 'new set'});\n\n    let [timingMethod, setTimingMethod] = useState('time');\n\n    let history = useHistory();\n\n    if(!user.loggedIn) history.push('/auth/login');\n\n    let loadUser = async () => {\n\n        await axios.get('http://localhost:5000/api/user/profile', {\n            headers: {auth_token: localStorage.getItem(\"user_auth_token\")}\n        }).then(res => {\n            console.log(res);\n        })\n\n    }\n\n\n    loadUser();\n\n\n\n    let handleChange = (e) => {\n\n        setNewSetName({name: e.target.value});  \n    }\n\n    let changeTimeMethod = (e) => {\n\n        setTimingMethod(e.target.id);\n\n    }\n\n    let generateSet = () => {\n        history.push('/dashboard/set');\n    }\n\n    let SetDialog = () => {\n        return (\n        <div>\n            <CloseModal id=\"close-modal\" src={CloseIcon} alt=\"close set dialog\"></CloseModal>\n            <Input>\n                <SetName type=\"text\" onBlur={handleChange} defaultValue={newSetName.name} onFocus={(e) => e.target.select()}/>\n                <Edit src={EditIcon} alt=\"edit set name\"/>\n            </Input>\n            <MethodPicker>\n                <TimeMethod id=\"time\" onClick={changeTimeMethod} selected={timingMethod === 'time' ? true : false}>time</TimeMethod>\n                <TimeMethod id=\"tempo\" onClick={changeTimeMethod} selected={timingMethod === 'tempo' ? true : false}>tempo</TimeMethod>\n            </MethodPicker>\n            <CreateSet onClick={generateSet}>create</CreateSet>\n        </div>)\n    }\n\n    let handleClick = (e) => {\n        if(e.target.id === \"set-dialog-modal-background\" || e.target.id === \"close-modal\" ) setShowDialog(false);\n    }\n\n    \n    return (\n        <div>\n            <Nav />\n            <Page>\n                <Welcome>hi, <Link to=\"/account/user\">parishilton</Link></Welcome>\n                <Header>dashboard</Header>\n                <Sets> \n                    <AddSet onClick={() => {setShowDialog(true)}}>\n                        <img src={AddIcon} alt=\"New Set\" width=\"40px\"></img>\n                        <Label>new set</Label>\n                    </AddSet>\n                </Sets>\n                {showDialog ?\n                <Background id=\"set-dialog-modal-background\" onClick={handleClick}>\n                    <Modal>\n                        <SetDialog />\n                    </Modal>\n                </Background>\n                :\n                <></>\n                }\n\n            </Page>\n        </div>\n    );\n};\n\nexport default Dashboard;\n\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst Header = styled.h1`\n    color: deeppink;\n    font-weight: 300;\n    letter-spacing: 1px;\n    font-weight: 800;\n    padding-top: 80px;\n    padding-bottom: 40px;\n    text-align: center;\n`\n\nconst Welcome = styled.h1`\n    font-weight: 300;\n    padding-top: 100px;\n    text-align: center;\n    & > * {\n        text-decoration: none;\n        color: white;\n        &:hover {\n            color: deeppink;\n        }\n    }\n`\n\nlet Sets = styled.div`\n    width: 80vw;\n    height: 60vh;\n    background-color: rgba(255,255,255,0.05);\n    border-radius: 30px;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n`\n\nlet Label = styled.h4`\n    position: absolute;\n    bottom: -30px;\n    \n`\n\nlet AddSet = styled.div`\n    position: relative;\n    width: 150px;\n    height: 100px;\n    margin: 30px;\n    border: 1px solid white;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    cursor: pointer;\n    &:hover {\n        background-color: rgba(255,255,255,0.2);\n    }\n`\n\nlet Background = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nlet modalAnimation = keyframes`\n    0% {\n        opacity: 0%;\n        transform: translateY(400px);\n    }\n    100% {\n        opacity: 100%;\n        transform: translateY(0px);\n    }\n`\n\n\nlet Modal = styled.div`\n    animation-name: ${modalAnimation};\n    animation-duration: 300ms;\n    animation-iteration-count: 1;\n    & > * {\n        position: relative;\n        width: 30vw;\n        height: 25vh;\n        border-radius: 10px;\n        background-color: #222;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n\n    }\n` \n\nlet SetName = styled.input`\n    color: #fff;\n    width: 15vw;\n    min-width: 200px;\n    font-size: 1rem;\n    background-color: #222;\n    padding: 10px;\n    margin: 10px;\n    border-radius: 3px;\n    border: none;\n    text-align: center;\n    transition: all 200ms;\n    z-index: 1;\n    background-color: rgba(255,255,255,0.1);\n\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid white;\n        background-color: rgba(255,255,255,0.4);\n    }\n\n    &::placeholder {\n        color: #fff;\n    }\n`\n\nlet MethodPicker = styled.div`\n    display: flex;\n`\n\nlet TimeMethod = styled.div`\n    background-color: ${ props => props.selected ? 'rgba(3,252,194,0.5)' : '#333'};\n    color:#fff;\n    height: 50px;\n    width: 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n        background-color: ${ props => props.selected ? 'rgba(3,252,194,0.5)' : 'rgba(3,252,194,0.2)'};\n    }\n`\n\nlet CloseModal = styled.img`\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    width: 30px;\n    &:hover {\n        background-color: rgba(255,255,255,0.3);\n        border-radius: 50%;\n    }\n`\n\nlet CreateSet = styled.div`\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    background-color: rgba(0,255,255,0.7);\n    color:#fff;\n    height: 50px;\n    width: 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n        background-color: rgba(0,255,255,0.2);\n    }\n`\n\nlet Input = styled.div`\n    position: relative;\n`\n\nlet Edit = styled.img`\n    position: absolute;\n    right: 20px;\n    top: 35%;\n    width: 20px;\n    z-index: 0;\n`\n"]},"metadata":{},"sourceType":"module"}