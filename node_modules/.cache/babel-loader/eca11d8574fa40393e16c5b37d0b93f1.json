{"ast":null,"code":"/*\nan array of sets \n\neach set has a light \n\neach light has a grid of states\n\neach grid state has a length in tempo\n\n*/\nimport { bridge } from './bridge';\nexport let currentEditorState = {\n  id: 'DEFAULT',\n  length: 1,\n  color: {\n    hue: 0,\n    saturation: 100,\n    brightness: 50\n  }\n};\nexport let set = [{\n  name: 'light1',\n  id: 'light1',\n  gridStates: []\n}, {\n  name: 'light2',\n  id: 'light2',\n  gridStates: []\n}, {\n  name: 'light3',\n  id: 'light3',\n  gridStates: []\n}, {\n  name: 'light4',\n  id: 'light4',\n  gridStates: []\n}];\nlet lights = bridge.getLights();","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/data.js"],"names":["bridge","currentEditorState","id","length","color","hue","saturation","brightness","set","name","gridStates","lights","getLights"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,UAAvB;AAGA,OAAO,IAAIC,kBAAkB,GAAG;AAC5BC,EAAAA,EAAE,EAAE,SADwB;AAE5BC,EAAAA,MAAM,EAAE,CAFoB;AAG5BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,CADF;AAEHC,IAAAA,UAAU,EAAE,GAFT;AAGHC,IAAAA,UAAU,EAAE;AAHT;AAHqB,CAAzB;AAUP,OAAO,IAAIC,GAAG,GAAG,CAEb;AACIC,EAAAA,IAAI,EAAE,QADV;AAEIP,EAAAA,EAAE,EAAE,QAFR;AAGIQ,EAAAA,UAAU,EAAE;AAHhB,CAFa,EASb;AACID,EAAAA,IAAI,EAAE,QADV;AAEIP,EAAAA,EAAE,EAAE,QAFR;AAGIQ,EAAAA,UAAU,EAAE;AAHhB,CATa,EAgBb;AACID,EAAAA,IAAI,EAAE,QADV;AAEIP,EAAAA,EAAE,EAAE,QAFR;AAGIQ,EAAAA,UAAU,EAAE;AAHhB,CAhBa,EAuBb;AACID,EAAAA,IAAI,EAAE,QADV;AAEIP,EAAAA,EAAE,EAAE,QAFR;AAGIQ,EAAAA,UAAU,EAAE;AAHhB,CAvBa,CAAV;AAgCP,IAAIC,MAAM,GAAGX,MAAM,CAACY,SAAP,EAAb","sourcesContent":["/*\nan array of sets \n\neach set has a light \n\neach light has a grid of states\n\neach grid state has a length in tempo\n\n*/\n\nimport { bridge } from './bridge';\n\n\nexport let currentEditorState = {\n    id: 'DEFAULT',\n    length: 1,\n    color: {\n        hue: 0,\n        saturation: 100,\n        brightness: 50\n    }\n}\n\nexport let set = [\n\n    {\n        name: 'light1', \n        id: 'light1',\n        gridStates: [\n            \n        ]\n    },\n    {\n        name: 'light2', \n        id: 'light2',\n        gridStates: [\n\n        ]\n    },\n    {\n        name: 'light3', \n        id: 'light3',\n        gridStates: [\n\n        ]\n    },\n    {\n        name: 'light4',\n        id: 'light4',\n        gridStates: [\n            \n        ]\n    }\n]\n\nlet lights = bridge.getLights();\n\n\n"]},"metadata":{},"sourceType":"module"}