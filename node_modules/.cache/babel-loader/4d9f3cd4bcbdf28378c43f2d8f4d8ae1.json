{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { set, currentEditorState } from './data';\nimport StateCreator from './StateCreator.jsx';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nfunction App() {\n  _s();\n\n  let [lines, setLines] = useState([...set]);\n\n  const State = props => {\n    const state = props.state;\n    const style = {\n      backgroundColor: `hsl(${state.color.hue}, ${state.color.saturation}%, ${state.color.brightness}%)`,\n      height: '100px',\n      width: `${state.length * 100}px`,\n      borderRadius: '5px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, state.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Grid = props => {\n    let states = props.light.gridStates;\n    return states.map((state, index) => {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: state.id,\n        index: index,\n        type: \"STATE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          className: \"draggable-state\",\n          children: /*#__PURE__*/_jsxDEV(State, {\n            state: state\n          }, state.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, `${state.id}-${props.light.name}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const Light = props => {\n    const light = props.light;\n    const style = {\n      width: '100px',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: light.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, light.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Line = props => {\n    const style = {\n      display: 'flex',\n      borderBottom: '1px solid #2f2f2f',\n      backgroundColor: '#222'\n    };\n    const gridStyle = {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      width: '100%'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(Light, {\n        light: props.light\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.light.id,\n        direction: \"horizontal\",\n        type: \"STATE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: gridStyle,\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            light: props.light\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  };\n\n  const LineStack = () => {\n    return lines.map((light, index) => {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: light.id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            light: light\n          }, light.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, light.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if (source.droppableId === \"viewer\") {\n      const newLines = [...lines];\n      const light = newLines.find(light => light.id === destination.droppableId);\n      const state = {\n        id: currentEditorState.id,\n        length: currentEditorState.length,\n        color: {\n          hue: currentEditorState.color.hue,\n          saturation: currentEditorState.color.saturation,\n          brightness: currentEditorState.color.brightness\n        }\n      };\n      light.gridStates.splice(destination.index, 0, state);\n      setLines([...newLines]);\n      return;\n    }\n\n    if (result.type === \"STATE\") {\n      const newLines = [...lines];\n      const startingLine = newLines.find(light => light.id === source.droppableId);\n      const endingLine = newLines.find(light => light.id === destination.droppableId);\n      const draggedState = startingLine.gridStates.find(state => state.id === draggableId);\n      startingLine.gridStates.splice(source.index, 1);\n      endingLine.gridStates.splice(destination.index, 0, draggedState);\n      setLines([...newLines]);\n    } else if (result.type === \"LINE\") {\n      const newLines = [...lines];\n      const draggedLine = newLines.splice(source.index, 1)[0];\n      newLines.splice(destination.index, 0, draggedLine);\n      setLines([...newLines]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(StateCreator, {\n        stateId: uuidv4()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"linestack\",\n        type: \"LINE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(LineStack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MLE/xvKLSRVikAlf5bsENMZtVic=\");\n\n_c = App;\nlet bridgeUser = \"\";\n\nconst getBridgeIP = async () => {\n  let ip = '';\n  await axios.get('https://discovery.meethue.com').then(res => {\n    ip = res.data[0].internalipaddress;\n  }).catch(err => {\n    console.log(err);\n  });\n  return ip;\n};\n\nconst connectToBridge = async (ip, user) => {\n  if (user) {\n    await axios.get(`http://${ip}/api/${user}`).then(res => {\n      console.log(res);\n    });\n  } else {\n    createUser(ip).then(res => {\n      console.log(res);\n    });\n  }\n};\n\nconst createUser = async ip => {\n  let linkButtonPressed = false;\n  let user = '';\n  let requests = 0;\n\n  const getUserFromBridge = ip => {\n    axios.post(`http://${ip}/api`, {\n      devicetype: \"hue-stage-wep-app\"\n    }).then(res => {\n      console.log(res);\n\n      if (res.data[0].description !== \"link button not pressed\") {\n        linkButtonPressed = true;\n        user = res.data[0].username;\n        requests += 1;\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\ngetBridgeIP().then(ip => {\n  connectToBridge(ip, bridgeUser);\n});\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","set","currentEditorState","StateCreator","v4","uuidv4","axios","App","lines","setLines","State","props","state","style","backgroundColor","color","hue","saturation","brightness","height","width","length","borderRadius","id","Grid","states","light","gridStates","map","index","provided","innerRef","draggableProps","dragHandleProps","name","Light","display","justifyContent","alignItems","Line","borderBottom","gridStyle","droppableProps","placeholder","LineStack","onDragEnd","result","destination","source","draggableId","droppableId","newLines","find","splice","type","startingLine","endingLine","draggedState","draggedLine","bridgeUser","getBridgeIP","ip","get","then","res","data","internalipaddress","catch","err","console","log","connectToBridge","user","createUser","linkButtonPressed","requests","getUserFromBridge","post","devicetype","description","username"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport { set, currentEditorState } from './data'\nimport StateCreator from './StateCreator.jsx'\nimport './App.css'\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios';\n\n\nfunction App() {\n\n  let [lines, setLines] = useState([...set])\n  \n  const State = (props) => {\n\n    const state = props.state\n\n    const style = {\n      backgroundColor: `hsl(${state.color.hue}, ${state.color.saturation}%, ${state.color.brightness}%)`,\n      height: '100px',\n      width: `${state.length * 100}px`,\n      borderRadius: '5px'\n    }\n\n    return (\n      <div key={state.id} style={style}></div>\n    )\n\n  }\n\n  const Grid = (props) => {\n\n    let states = props.light.gridStates\n\n    return states.map((state,index) => {\n\n      return (\n\n        <Draggable key={`${state.id}-${props.light.name}`} draggableId={state.id} index={index} type=\"STATE\">\n          {(provided)=>(\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"draggable-state\">\n              <State key={state.id} state={state}/>\n            </div>\n          )}\n        </Draggable>\n      )\n\n    })\n\n  }\n\n  const Light = (props) => {\n\n    const light = props.light\n\n    const style = {\n      width: '100px',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white',\n\n    }\n\n    return (\n      <div style={style} key={light.id}>\n        <h3>{light.name}</h3>\n      </div>\n    )\n\n  }\n\n  const Line = (props) => {\n\n    const style = {\n      display: 'flex',\n      borderBottom: '1px solid #2f2f2f',\n      backgroundColor: '#222'\n    }\n\n    const gridStyle = {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      width: '100%'\n    }\n\n    return (\n      <div style={style} >\n        <Light light={props.light}/>\n        <Droppable droppableId={props.light.id} direction=\"horizontal\" type=\"STATE\">\n        {(provided) => (\n          <div style={gridStyle} ref={provided.innerRef} {...provided.droppableProps}>\n            <Grid light={props.light}/>\n            {provided.placeholder}\n          </div>\n        )}\n        </Droppable>\n      </div>\n    )\n\n  }\n\n  const LineStack = () => {\n\n    return lines.map((light, index) => {\n\n      return (\n        <Draggable key={light.name} draggableId={light.id} index={index}>\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n              <Line key={light.name} light={light}/>\n            </div>\n          )}\n        </Draggable>\n\n      )\n\n    })\n\n\n  }\n\n\n  const onDragEnd = (result) => {\n\n    const {destination, source, draggableId} = result;\n\n    if(!destination) {\n      return;\n    }\n\n    if(destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if(source.droppableId === \"viewer\") {\n      const newLines = [...lines]\n      const light = newLines.find(light => light.id === destination.droppableId)\n      const state = {\n        id: currentEditorState.id,\n        length: currentEditorState.length,\n        color: {\n          hue: currentEditorState.color.hue,\n          saturation: currentEditorState.color.saturation,\n          brightness: currentEditorState.color.brightness\n        }\n      }\n      light.gridStates.splice(destination.index, 0, state);\n      setLines([...newLines])\n      return;\n    }\n    \n    if(result.type === \"STATE\") {\n      \n      const newLines = [...lines];\n\n      const startingLine = newLines.find(light => light.id === source.droppableId);\n      const endingLine = newLines.find(light => light.id === destination.droppableId);\n\n      const draggedState = startingLine.gridStates.find(state => state.id === draggableId)\n\n      startingLine.gridStates.splice(source.index, 1);\n      endingLine.gridStates.splice(destination.index, 0, draggedState);\n\n      setLines([...newLines])\n      \n    } else if (result.type === \"LINE\") {\n\n      const newLines = [...lines]\n\n      const draggedLine = newLines.splice(source.index, 1)[0];\n      newLines.splice(destination.index, 0, draggedLine);\n      \n      setLines([...newLines]);\n      \n      \n    }\n  \n  }\n\n\n  return (\n    <div className=\"App\">\n    <DragDropContext onDragEnd={onDragEnd}>\n      \n      <StateCreator stateId={uuidv4()} />\n\n      <Droppable droppableId=\"linestack\" type=\"LINE\">\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps}>\n          <LineStack/>\n          {provided.placeholder}\n        </div>\n      )}\n      </Droppable>\n\n    </DragDropContext>\n      \n    </div>\n  );\n}\n\n\n\nlet bridgeUser = \"\"\n\nconst getBridgeIP = async () => {\n\n  let ip = ''\n  await axios.get('https://discovery.meethue.com').then(res => {\n    ip = res.data[0].internalipaddress\n  }).catch(err => {\n    console.log(err)\n  })\n  return ip;\n\n}\n\nconst connectToBridge = async (ip, user) => {\n\n  if(user) {\n      await axios.get(`http://${ip}/api/${user}`).then(res => {\n       console.log(res);\n      })\n  } else {\n      createUser(ip).then(res => {\n        console.log(res);\n      });\n  }\n}\n\nconst createUser = async (ip) => {\n\n  let linkButtonPressed = false;\n  let user = '';\n  let requests = 0;\n\n  const getUserFromBridge = (ip) => {\n  \n    axios.post(`http://${ip}/api`, {devicetype: \"hue-stage-wep-app\"})\n      .then(res => {\n        console.log(res);\n        if (res.data[0].description !== \"link button not pressed\") {\n          linkButtonPressed = true;\n          user = res.data[0].username;\n          requests += 1;\n        } \n      }).catch(err => {\n        console.log(err);\n      })\n  \n  }\n\n\n}\n\n\n\n\ngetBridgeIP().then(ip => {\n  connectToBridge(ip, bridgeUser);\n})\n\n\n\n\n\n\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}