{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/barco/Desktop/sites/tests/dnd-tests/test6/hue-stage/client/src/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Nav from '../Nav/Nav';\nimport { UserContext } from '../UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport AddIcon from \"../resources/add-black-18dp.svg\";\n\nconst Dashboard = () => {\n  _s();\n\n  let {\n    user,\n    setUser\n  } = useContext(UserContext);\n  let [showDialog, setShowDialog] = useState(false);\n  let [newSetName, setNewSetName] = useState({\n    name: 'new set'\n  });\n  let history = useHistory();\n  if (!user.loggedIn) history.push('/auth/login');\n\n  let handleChange = e => {\n    console.log(e.target.value);\n    setNewSetName({\n      name: e.target.value\n    });\n  };\n\n  let SetDialog = () => {\n    console.log(newSetName);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SetName, {\n        type: \"text\",\n        onBlur: handleChange,\n        defaultValue: newSetName.name,\n        onFocus: e => e.target.select()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MethodPicker, {\n        children: [/*#__PURE__*/_jsxDEV(TimeMethod, {\n          children: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TimeMethod, {\n          children: \"tempo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  };\n\n  let handleClick = e => {\n    if (e.target.id === \"set-dialog-modal-background\") setShowDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(Welcome, {\n        children: [\"hi, \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/account/user\",\n          children: \"parishilton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sets, {\n        children: /*#__PURE__*/_jsxDEV(AddSet, {\n          onClick: () => {\n            setShowDialog(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: AddIcon,\n            alt: \"New Set\",\n            width: \"40px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"new set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), showDialog ? /*#__PURE__*/_jsxDEV(Background, {\n        id: \"set-dialog-modal-background\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          children: /*#__PURE__*/_jsxDEV(SetDialog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"kPCMgSFKWCz9UJExHHYtBRozqBc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`;\n_c2 = Page;\nconst Header = styled.h1`\n    color: deeppink;\n    font-weight: 300;\n    letter-spacing: 1px;\n    font-weight: 800;\n    padding-top: 80px;\n    padding-bottom: 40px;\n    text-align: center;\n`;\n_c3 = Header;\nconst Welcome = styled.h1`\n    font-weight: 300;\n    padding-top: 100px;\n    text-align: center;\n    & > * {\n        text-decoration: none;\n        color: white;\n        &:hover {\n            color: deeppink;\n        }\n    }\n`;\n_c4 = Welcome;\nlet Sets = styled.div`\n    width: 80vw;\n    height: 60vh;\n    background-color: rgba(255,255,255,0.05);\n    border-radius: 30px;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n`;\n_c5 = Sets;\nlet Label = styled.h4`\n    position: absolute;\n    bottom: -30px;\n    \n`;\n_c6 = Label;\nlet AddSet = styled.div`\n    position: relative;\n    width: 150px;\n    height: 100px;\n    margin: 30px;\n    border: 1px solid white;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    cursor: pointer;\n    &:hover {\n        background-color: rgba(255,255,255,0.2);\n    }\n`;\n_c7 = AddSet;\nlet Background = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n_c8 = Background;\nlet modalAnimation = keyframes`\n    0% {\n        opacity: 0%;\n        transform: translateY(400px);\n    }\n    100% {\n        opacity: 100%;\n        transform: translateY(0px);\n    }\n`;\nlet Modal = styled.div`\n    animation-name: ${modalAnimation};\n    animation-duration: 300ms;\n    animation-iteration-count: 1;\n    & > * {\n        width: 30vw;\n        height: 60vh;\n        border-radius: 10px;\n        background-color: #222;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n\n    }\n`;\n_c9 = Modal;\nlet SetName = styled.input`\n    color: #fff;\n    width: 15vw;\n    min-width: 200px;\n    font-size: 1rem;\n    background-color: #222;\n    padding: 10px;\n    margin: 10px;\n    border-radius: 3px;\n    border: none;\n    text-align: center;\n    transition: all 200ms;\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid white;\n    }\n\n    &::placeholder {\n        color: #fff;\n    }\n`;\n_c10 = SetName;\nlet MethodPicker = styled.div`\n    display: flex;\n`;\n_c11 = MethodPicker;\nlet TimeMethod = styled.div`\n    background-color: #333;\n    color:#fff;\n    height: 50px;\n    width: 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n_c12 = TimeMethod;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"Page\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Welcome\");\n$RefreshReg$(_c5, \"Sets\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"AddSet\");\n$RefreshReg$(_c8, \"Background\");\n$RefreshReg$(_c9, \"Modal\");\n$RefreshReg$(_c10, \"SetName\");\n$RefreshReg$(_c11, \"MethodPicker\");\n$RefreshReg$(_c12, \"TimeMethod\");","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/hue-stage/client/src/Dashboard/Dashboard.js"],"names":["React","useContext","useState","useEffect","styled","keyframes","Nav","UserContext","useHistory","Link","Dashboard","user","setUser","showDialog","setShowDialog","newSetName","setNewSetName","name","history","loggedIn","push","handleChange","e","console","log","target","value","SetDialog","select","handleClick","id","AddIcon","Page","div","Header","h1","Welcome","Sets","Label","h4","AddSet","Background","modalAnimation","Modal","SetName","input","MethodPicker","TimeMethod"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,M;AAUN,MAAME,OAAO,GAAGhC,MAAM,CAAC+B,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMC,O;AAaN,IAAIC,IAAI,GAAGjC,MAAM,CAAC6B,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAII,I;AAUJ,IAAIC,KAAK,GAAGlC,MAAM,CAACmC,EAAG;AACtB;AACA;AACA;AACA,CAJA;MAAID,K;AAMJ,IAAIE,MAAM,GAAGpC,MAAM,CAAC6B,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAIO,M;AAiBJ,IAAIC,UAAU,GAAGrC,MAAM,CAAC6B,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAIQ,U;AAUJ,IAAIC,cAAc,GAAGrC,SAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAYA,IAAIsC,KAAK,GAAGvC,MAAM,CAAC6B,GAAI;AACvB,sBAAsBS,cAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAIC,K;AAiBJ,IAAIC,OAAO,GAAGxC,MAAM,CAACyC,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;OAAID,O;AAsBJ,IAAIE,YAAY,GAAG1C,MAAM,CAAC6B,GAAI;AAC9B;AACA,CAFA;OAAIa,Y;AAIJ,IAAIC,UAAU,GAAG3C,MAAM,CAAC6B,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;OAAIc,U","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport Nav from '../Nav/Nav';\nimport { UserContext } from '../UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport AddIcon from '../resources/add-black-18dp.svg';\n\n\nconst Dashboard = () => {\n\n    let {user, setUser} = useContext(UserContext);\n\n    let [showDialog, setShowDialog] = useState(false);\n\n    let [newSetName, setNewSetName] = useState({name: 'new set'});\n\n    let history = useHistory();\n\n    if(!user.loggedIn) history.push('/auth/login');\n\n    let handleChange = (e) => {\n        console.log(e.target.value);\n\n        setNewSetName({name: e.target.value});  \n    }\n\n    let SetDialog = () => {\n\n        console.log(newSetName);\n\n        return (\n        <div>\n            <SetName type=\"text\" onBlur={handleChange} defaultValue={newSetName.name} onFocus={(e) => e.target.select()}/>\n            <MethodPicker>\n                <TimeMethod>time</TimeMethod>\n                <TimeMethod>tempo</TimeMethod>\n            </MethodPicker>\n        </div>)\n    }\n\n    let handleClick = (e) => {\n        if(e.target.id === \"set-dialog-modal-background\") setShowDialog(false);\n    }\n\n    \n    return (\n        <div>\n            <Nav />\n            <Page>\n                <Welcome>hi, <Link to=\"/account/user\">parishilton</Link></Welcome>\n                <Header>dashboard</Header>\n                <Sets> \n                    <AddSet onClick={() => {setShowDialog(true)}}>\n                        <img src={AddIcon} alt=\"New Set\" width=\"40px\"></img>\n                        <Label>new set</Label>\n                    </AddSet>\n                </Sets>\n                {showDialog ?\n                <Background id=\"set-dialog-modal-background\" onClick={handleClick}>\n                    <Modal>\n                        <SetDialog />\n                    </Modal>\n                </Background>\n                :\n                <></>\n                }\n\n            </Page>\n        </div>\n    );\n};\n\nexport default Dashboard;\n\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst Header = styled.h1`\n    color: deeppink;\n    font-weight: 300;\n    letter-spacing: 1px;\n    font-weight: 800;\n    padding-top: 80px;\n    padding-bottom: 40px;\n    text-align: center;\n`\n\nconst Welcome = styled.h1`\n    font-weight: 300;\n    padding-top: 100px;\n    text-align: center;\n    & > * {\n        text-decoration: none;\n        color: white;\n        &:hover {\n            color: deeppink;\n        }\n    }\n`\n\nlet Sets = styled.div`\n    width: 80vw;\n    height: 60vh;\n    background-color: rgba(255,255,255,0.05);\n    border-radius: 30px;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n`\n\nlet Label = styled.h4`\n    position: absolute;\n    bottom: -30px;\n    \n`\n\nlet AddSet = styled.div`\n    position: relative;\n    width: 150px;\n    height: 100px;\n    margin: 30px;\n    border: 1px solid white;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    cursor: pointer;\n    &:hover {\n        background-color: rgba(255,255,255,0.2);\n    }\n`\n\nlet Background = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nlet modalAnimation = keyframes`\n    0% {\n        opacity: 0%;\n        transform: translateY(400px);\n    }\n    100% {\n        opacity: 100%;\n        transform: translateY(0px);\n    }\n`\n\n\nlet Modal = styled.div`\n    animation-name: ${modalAnimation};\n    animation-duration: 300ms;\n    animation-iteration-count: 1;\n    & > * {\n        width: 30vw;\n        height: 60vh;\n        border-radius: 10px;\n        background-color: #222;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n\n    }\n` \n\nlet SetName = styled.input`\n    color: #fff;\n    width: 15vw;\n    min-width: 200px;\n    font-size: 1rem;\n    background-color: #222;\n    padding: 10px;\n    margin: 10px;\n    border-radius: 3px;\n    border: none;\n    text-align: center;\n    transition: all 200ms;\n    &:focus {\n        outline: none;\n        border-bottom: 2px solid white;\n    }\n\n    &::placeholder {\n        color: #fff;\n    }\n`\n\nlet MethodPicker = styled.div`\n    display: flex;\n`\n\nlet TimeMethod = styled.div`\n    background-color: #333;\n    color:#fff;\n    height: 50px;\n    width: 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n"]},"metadata":{},"sourceType":"module"}