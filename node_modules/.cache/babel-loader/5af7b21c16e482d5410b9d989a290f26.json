{"ast":null,"code":"// bridgeIndex: light[0],\n// name: light[1].name,\n// id: light[1].uniqueid,\n// gridStates: []\nexport default class StateMessage {\n  constructor(bridgeIndex, name, id, gridStates) {\n    this.bridgeIndex = bridgeIndex;\n    this.name = name;\n    this.id = id;\n    this.gridStates = gridStates;\n  }\n\n}","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/state-model.js"],"names":["StateMessage","constructor","bridgeIndex","name","id","gridStates"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,eAAe,MAAMA,YAAN,CAAmB;AAE9BC,EAAAA,WAAW,CAACC,WAAD,EAAcC,IAAd,EAAoBC,EAApB,EAAwBC,UAAxB,EAAoC;AAE3C,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEH;;AAT6B","sourcesContent":["// bridgeIndex: light[0],\n// name: light[1].name,\n// id: light[1].uniqueid,\n// gridStates: []\n\nexport default class StateMessage {\n\n    constructor(bridgeIndex, name, id, gridStates) {\n\n        this.bridgeIndex = bridgeIndex;\n        this.name = name;\n        this.id = id;\n        this.gridStates = gridStates;\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}