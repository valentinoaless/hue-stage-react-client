{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { set } from './data';\n\nfunction App() {\n  _s();\n\n  let [lines, setLines] = useState([...set]);\n\n  const State = props => {\n    const state = props.state;\n    const style = {\n      backgroundColor: `${state.color}`,\n      height: '100px',\n      width: `${state.length * 100}px`,\n      borderRadius: '5px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, state.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Grid = props => {\n    let states = props.light.gridStates;\n    return states.map((state, index) => {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: state.id,\n        index: index,\n        type: \"STATE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: /*#__PURE__*/_jsxDEV(State, {\n            state: state\n          }, state.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const Light = props => {\n    const light = props.light;\n    const style = {\n      width: '100px',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: light.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, light.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Line = props => {\n    const style = {\n      display: 'flex',\n      borderTop: '1px solid white',\n      borderBottom: '1px solid white',\n      backgroundColor: '#333'\n    };\n    const gridStyle = {\n      display: 'flex',\n      justifyContent: 'flex-start'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(Light, {\n        light: props.light\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.light.id,\n        direction: \"horizontal\",\n        type: \"STATE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: gridStyle,\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            light: props.light\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n\n  const LineStack = () => {\n    return set.map(light => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        light: light\n      }, light.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const onDragEnd = result => {\n    console.log(result);\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if (result.type === \"STATE\") {\n      const newLines = [...lines];\n      const startingLine = newLines.find(light => light.id === source.droppableId);\n      const endingLine = newLines.find(light => light.id === destination.droppableId);\n      console.log(startingLine, endingLine);\n      const draggedState = startingLine.gridStates.find(state => state.id === draggableId);\n      startingLine.gridStates.splice(source.index, 1);\n      endingLine.gridStates.splice(destination.index, 0, draggedState); //newLines.find(light => light.id === source.droppableId).gridStates.splice(source.index, 1);\n      //newLines.find(light => light.id === destination.droppableId).gridStates.splice(destination.index, 0, draggedState);\n      //setLines(newLines)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(LineStack, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MLE/xvKLSRVikAlf5bsENMZtVic=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","set","App","lines","setLines","State","props","state","style","backgroundColor","color","height","width","length","borderRadius","id","Grid","states","light","gridStates","map","index","provided","innerRef","draggableProps","dragHandleProps","Light","display","justifyContent","alignItems","name","Line","borderTop","borderBottom","gridStyle","droppableProps","placeholder","LineStack","onDragEnd","result","console","log","destination","source","draggableId","droppableId","type","newLines","startingLine","find","endingLine","draggedState","splice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport { set } from './data'\n\n\nfunction App() {\n\n  let [lines, setLines] = useState([...set])\n\n  const State = (props) => {\n\n    const state = props.state\n\n    const style = {\n      backgroundColor: `${state.color}`,\n      height: '100px',\n      width: `${state.length * 100}px`,\n      borderRadius: '5px'\n    }\n\n    return (\n      <div key={state.id} style={style}></div>\n    )\n\n  }\n\n  const Grid = (props) => {\n\n    let states = props.light.gridStates\n\n    return states.map((state,index) => {\n\n      return (\n\n        <Draggable draggableId={state.id} index={index} type=\"STATE\">\n          {(provided)=>(\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n              <State key={state.id} state={state}/>\n            </div>\n          )}\n        </Draggable>\n      )\n\n    })\n\n  }\n\n  const Light = (props) => {\n\n    const light = props.light\n\n    const style = {\n      width: '100px',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white',\n\n    }\n\n    return (\n      <div style={style} key={light.id}>\n        <h3>{light.name}</h3>\n      </div>\n    )\n\n  }\n\n  const Line = (props) => {\n\n    const style = {\n      display: 'flex',\n      borderTop: '1px solid white',\n      borderBottom: '1px solid white',\n      backgroundColor: '#333'\n    }\n\n    const gridStyle = {\n      display: 'flex',\n      justifyContent: 'flex-start'\n    }\n\n    return (\n      <div style={style} >\n        <Light light={props.light}/>\n\n        <Droppable droppableId={props.light.id} direction=\"horizontal\" type=\"STATE\">\n\n        {(provided) => (\n          <div style={gridStyle} ref={provided.innerRef} {...provided.droppableProps}>\n            <Grid light={props.light}/>\n            {provided.placeholder}\n          </div>\n        )}\n\n        </Droppable>\n      </div>\n    )\n\n  }\n\n  const LineStack = () => {\n\n    return set.map(light => {\n\n      return <Line key={light.name} light={light}/>\n\n    })\n\n\n  }\n\n\n  const onDragEnd = (result) => {\n\n    console.log(result)\n\n    const {destination, source, draggableId} = result;\n\n    if(!destination) {\n      return;\n    }\n\n    if(destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if(result.type === \"STATE\") {\n\n      const newLines = [...lines];\n\n      const startingLine = newLines.find(light => light.id === source.droppableId);\n      const endingLine = newLines.find(light => light.id === destination.droppableId);\n\n      console.log(startingLine, endingLine)\n\n      const draggedState = startingLine.gridStates.find(state => state.id === draggableId)\n\n      startingLine.gridStates.splice(source.index, 1);\n      endingLine.gridStates.splice(destination.index, 0, draggedState);\n      \n\n\n      //newLines.find(light => light.id === source.droppableId).gridStates.splice(source.index, 1);\n\n      //newLines.find(light => light.id === destination.droppableId).gridStates.splice(destination.index, 0, draggedState);\n\n      //setLines(newLines)\n\n      \n\n\n\n    }\n\n\n  }\n\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n    <DragDropContext onDragEnd={onDragEnd}>\n\n      <LineStack/>\n\n    </DragDropContext>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}