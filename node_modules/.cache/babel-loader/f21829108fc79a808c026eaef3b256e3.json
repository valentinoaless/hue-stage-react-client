{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/set-controls.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components'; // play button\n// pause button\n// tempo\n// i.e. tempo = 140, beat happens at second measure (4 beats)\n\nlet tempo = 120;\nlet beatsPerBar = 4;\nlet beatValue = 4; // 1/4 (quarter)\n// get current time and every 50 ms check what objects have a play time before current time\n// after copying state and sending, delete those objects from the play time\n// render all states \n// when rendering states, make an array with objects\n// each object will have two properties, playTime and an array of all the states\n//disable all controls and dnd interface\n\n/*\n\n\n*/\n\nconst SetControls = () => {\n  let playing = false;\n\n  const play = () => {\n    let initialTime = new Date().getTime();\n    console.log(initialTime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Controls, {\n    children: [\"Nav Bar\", /*#__PURE__*/_jsxDEV(Play, {\n      onClick: play\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SetControls;\nexport default SetControls;\nconst Controls = styled.div`\n    color: white; \n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n_c2 = Controls;\nconst Play = styled.div`\n    width: 20px;\n    height: 20px;\n    margin: 20px;\n    transform: rotate(45deg);\n    background-color: white;\n    :hover {\n        background-color: green;\n    }\n`;\n_c3 = Play;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SetControls\");\n$RefreshReg$(_c2, \"Controls\");\n$RefreshReg$(_c3, \"Play\");","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/src/set-controls.jsx"],"names":["React","useState","styled","tempo","beatsPerBar","beatValue","SetControls","playing","play","initialTime","Date","getTime","console","log","Controls","div","Play"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AAGA;;AAIA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,SAAS,GAAG,CAAhB,C,CAAmB;AAEnB;AAKA;AAGA;AACA;AACA;AAIA;;AAEA;AACA;AACA;AACA;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAEtB,MAAIC,OAAO,GAAG,KAAd;;AAEA,QAAMC,IAAI,GAAG,MAAM;AAEf,QAAIC,WAAW,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEH,GALD;;AAQA,sBACI,QAAC,QAAD;AAAA,uCAEI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;KAAMF,W;AAoBN,eAAeA,WAAf;AAEA,MAAMQ,QAAQ,GAAGZ,MAAM,CAACa,GAAI;AAC5B;AACA;AACA;AACA;AACA,CALA;MAAMD,Q;AAON,MAAME,IAAI,GAAGd,MAAM,CAACa,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMC,I","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\n// play button\n// pause button\n// tempo\n\n\n// i.e. tempo = 140, beat happens at second measure (4 beats)\n\n\n\nlet tempo = 120;\nlet beatsPerBar = 4;\nlet beatValue = 4; // 1/4 (quarter)\n\n// get current time and every 50 ms check what objects have a play time before current time\n\n\n\n\n// after copying state and sending, delete those objects from the play time\n\n\n// render all states \n// when rendering states, make an array with objects\n// each object will have two properties, playTime and an array of all the states\n\n\n\n//disable all controls and dnd interface\n\n/*\n\n\n*/\n\n\nconst SetControls = () => {\n\n    let playing = false\n\n    const play = () => {\n\n        let initialTime = (new Date()).getTime();\n        console.log(initialTime);\n    \n    }\n\n\n    return (\n        <Controls >\n            Nav Bar\n            <Play onClick={play}/>\n        </Controls>\n    );\n};\n\nexport default SetControls;\n\nconst Controls = styled.div`\n    color: white; \n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Play = styled.div`\n    width: 20px;\n    height: 20px;\n    margin: 20px;\n    transform: rotate(45deg);\n    background-color: white;\n    :hover {\n        background-color: green;\n    }\n`"]},"metadata":{},"sourceType":"module"}