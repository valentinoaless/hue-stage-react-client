{"ast":null,"code":"var Promise = require('any-promise');\n\nvar assert = require('assert');\n\nmodule.exports = thenify;\n/**\n * Turn async functions into promises\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nfunction thenify(fn, options) {\n  assert(typeof fn === 'function');\n  return createWrapper(fn, options);\n}\n/**\n * Turn async functions into promises and backward compatible with callback\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\n\nthenify.withCallback = function (fn, options) {\n  assert(typeof fn === 'function');\n  options = options || {};\n  options.withCallback = true;\n  return createWrapper(fn, options);\n};\n\nfunction createCallback(resolve, reject, multiArgs) {\n  // default to true\n  if (multiArgs === undefined) multiArgs = true;\n  return function (err, value) {\n    if (err) return reject(err);\n    var length = arguments.length;\n    if (length <= 2 || !multiArgs) return resolve(value);\n\n    if (Array.isArray(multiArgs)) {\n      var values = {};\n\n      for (var i = 1; i < length; i++) values[multiArgs[i - 1]] = arguments[i];\n\n      return resolve(values);\n    }\n\n    var values = new Array(length - 1);\n\n    for (var i = 1; i < length; ++i) values[i - 1] = arguments[i];\n\n    resolve(values);\n  };\n}\n\nfunction createWrapper(fn, options) {\n  options = options || {};\n  var name = fn.name;\n  name = (name || '').replace(/\\s|bound(?!$)/g, '');\n\n  var newFn = function () {\n    var self = this;\n    var len = arguments.length;\n\n    if (options.withCallback) {\n      var lastType = typeof arguments[len - 1];\n      if (lastType === 'function') return fn.apply(self, arguments);\n    }\n\n    var args = new Array(len + 1);\n\n    for (var i = 0; i < len; ++i) args[i] = arguments[i];\n\n    var lastIndex = i;\n    return new Promise(function (resolve, reject) {\n      args[lastIndex] = createCallback(resolve, reject, options.multiArgs);\n      fn.apply(self, args);\n    });\n  };\n\n  Object.defineProperty(newFn, 'name', {\n    value: name\n  });\n  return newFn;\n}","map":{"version":3,"sources":["/Users/barco/Desktop/sites/tests/dnd-tests/test6/client/node_modules/thenify/index.js"],"names":["Promise","require","assert","module","exports","thenify","fn","options","createWrapper","withCallback","createCallback","resolve","reject","multiArgs","undefined","err","value","length","arguments","Array","isArray","values","i","name","replace","newFn","self","len","lastType","apply","args","lastIndex","Object","defineProperty"],"mappings":"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","sourcesContent":["\nvar Promise = require('any-promise')\nvar assert = require('assert')\n\nmodule.exports = thenify\n\n/**\n * Turn async functions into promises\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nfunction thenify(fn, options) {\n  assert(typeof fn === 'function')\n  return createWrapper(fn, options)\n}\n\n/**\n * Turn async functions into promises and backward compatible with callback\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nthenify.withCallback = function (fn, options) {\n  assert(typeof fn === 'function')\n  options = options || {}\n  options.withCallback = true\n  return createWrapper(fn, options)\n}\n\nfunction createCallback(resolve, reject, multiArgs) {\n  // default to true\n  if (multiArgs === undefined) multiArgs = true\n  return function(err, value) {\n    if (err) return reject(err)\n    var length = arguments.length\n\n    if (length <= 2 || !multiArgs) return resolve(value)\n\n    if (Array.isArray(multiArgs)) {\n      var values = {}\n      for (var i = 1; i < length; i++) values[multiArgs[i - 1]] = arguments[i]\n      return resolve(values)\n    }\n\n    var values = new Array(length - 1)\n    for (var i = 1; i < length; ++i) values[i - 1] = arguments[i]\n    resolve(values)\n  }\n}\n\nfunction createWrapper(fn, options) {\n  options = options || {}\n  var name = fn.name;\n  name = (name || '').replace(/\\s|bound(?!$)/g, '')\n  var newFn = function () {\n    var self = this\n    var len = arguments.length\n    if (options.withCallback) {\n      var lastType = typeof arguments[len - 1]\n      if (lastType === 'function') return fn.apply(self, arguments)\n    }\n    var args = new Array(len + 1)\n    for (var i = 0; i < len; ++i) args[i] = arguments[i]\n    var lastIndex = i\n    return new Promise(function (resolve, reject) {\n      args[lastIndex] = createCallback(resolve, reject, options.multiArgs)\n      fn.apply(self, args)\n    })\n  }\n  Object.defineProperty(newFn, 'name', { value: name })\n  return newFn\n}\n"]},"metadata":{},"sourceType":"script"}