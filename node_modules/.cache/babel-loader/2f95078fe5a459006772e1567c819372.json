{"ast":null,"code":"function n(n, t) {\n  return function (n) {\n    if (Array.isArray(n)) return n;\n  }(n) || function (n, t) {\n    var r = [],\n        e = !0,\n        u = !1,\n        o = void 0;\n\n    try {\n      for (var i, c = n[Symbol.iterator](); !(e = (i = c.next()).done) && (r.push(i.value), !t || r.length !== t); e = !0);\n    } catch (n) {\n      u = !0, o = n;\n    } finally {\n      try {\n        e || null == c.return || c.return();\n      } finally {\n        if (u) throw o;\n      }\n    }\n\n    return r;\n  }(n, t) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }();\n}\n\nfunction t(n, t, r, o = 0) {\n  const i = e(n, t, r),\n        c = i - u(n, t, r);\n\n  if (c) {\n    const e = i === n ? (t - r) / c : i === t ? (r - n) / c : (n - t) / c;\n    return 60 * (e + (i === n ? e < 0 ? 6 : 0 : i === t ? 2 : 4));\n  }\n\n  return o;\n}\n\nfunction r(n, t, r) {\n  const e = r < 0 ? r + 360 : r > 360 ? r - 360 : r;\n  return 6 * e < 360 ? n + (t - n) * e / 60 : 2 * e < 360 ? t : 3 * e < 720 ? n + (t - n) * (240 - e) / 60 : n;\n}\n\nfunction e(n, t, r) {\n  return v(n, t, r);\n}\n\nfunction u(n, t, r) {\n  return M(n, t, r);\n}\n\nfunction o(n, t) {\n  return t.map(t => t.reduce((t, r, e) => t + n[e] * i * (r * i) / i / i, 0));\n}\n\nconst i = 1e8,\n      c = 96.42,\n      a = 100,\n      l = 82.49,\n      s = (n, t) => g(p(n, t)),\n      f = n => b(d(n)),\n      d = n => n * q / 180,\n      g = n => 180 * n / q,\n      h = n => x(d(n)),\n      m = Math.abs,\n      p = Math.atan2,\n      y = Math.cbrt,\n      b = Math.cos,\n      k = Math.exp,\n      w = Math.floor,\n      v = Math.max,\n      M = Math.min,\n      q = Math.PI,\n      I = Math.pow,\n      x = Math.sin,\n      S = Math.sqrt,\n      A = I(6, 3) / I(29, 3),\n      $ = I(29, 3) / I(3, 3);\n\nfunction j(n, r, o, i) {\n  const c = t(n, r, o, i),\n        a = e(n, r, o),\n        l = u(n, r, o),\n        s = a - l,\n        f = (a + l) / 2;\n  return [c, 0 === s ? 0 : s / (100 - m(2 * f - 100)) * 100, f];\n}\n\nfunction z(n, t, e) {\n  const u = e <= 50 ? e * (t + 100) / 100 : e + t - e * t / 100,\n        o = 2 * e - u,\n        i = [r(o, u, n + 120), r(o, u, n), r(o, u, n - 120)];\n  return [i[0], i[1], i[2]];\n}\n\nfunction C(n, r, o, i) {\n  return [t(n, r, o, i), u(n, r, o), 100 - e(n, r, o)];\n}\n\nfunction E(t, r, e, u) {\n  const o = n(z(t, 100, 50).map(n => n * (100 - r - e) / 100 + r), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction L(n, r, o, i) {\n  const c = e(n, r, o),\n        a = u(n, r, o);\n  return [t(n, r, o, i), c === a ? 0 : (c - a) / c * 100, c];\n}\n\nfunction P(t, r, e) {\n  const u = w(t / 60),\n        o = e * (100 - r) / 100,\n        i = e * (100 - r * (t / 60 - u & 1 ? t / 60 - u : 1 - t / 60 - u)) / 100,\n        c = n(5 === u ? [e, o, i] : 4 === u ? [i, o, e] : 3 === u ? [o, i, e] : 2 === u ? [o, e, i] : 1 === u ? [i, e, o] : [e, i, o], 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction T(t, r, e) {\n  const u = n([t, r, e].map(n => n > 4.045 ? 100 * I((n + 5.5) / 105.5, 2.4) : n / 12.92), 3),\n        i = n(o([u[0], u[1], u[2]], [[.4124564, .3575761, .1804375], [.2126729, .7151522, .072175], [.0193339, .119192, .9503041]]), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction B(t, r, e) {\n  const u = n(o([t, r, e], [[3.2404542, -1.5371385, -.4985314], [-.969266, 1.8760108, .041556], [.0556434, -.2040259, 1.0572252]]), 3),\n        i = n([u[0], u[1], u[2]].map(n => n > .31308 ? 1.055 * I(n / 100, 1 / 2.4) * 100 - 5.5 : 12.92 * n), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction D(n, t, r) {\n  const e = t * (r < 50 ? r : 100 - r) / 100;\n  return [n, 0 === e ? 0 : 2 * e / (r + e) * 100, r + e];\n}\n\nfunction F(n, t, r) {\n  const e = (200 - t) * r / 100;\n  return [n, 0 === e || 200 === e ? 0 : t * r / 100 / (e <= 100 ? e : 200 - e) * 100, 5 * e / 10];\n}\n\nfunction G(n, t, r) {\n  return [n, 100 === r ? 0 : 100 - t / (100 - r) * 100, 100 - r];\n}\n\nfunction H(n, t, r) {\n  return [n, (100 - t) * r / 100, 100 - r];\n}\n\nfunction J(t, r, e) {\n  const u = (t + 16) / 116,\n        i = r / 500 + u,\n        s = u - e / 200,\n        f = I(i, 3) > A ? I(i, 3) : (116 * i - 16) / $,\n        d = t > $ * A ? I((t + 16) / 116, 3) : t / $,\n        g = I(s, 3) > A ? I(s, 3) : (116 * s - 16) / $,\n        h = n(o([f * c, d * a, g * l], [[.9555766, -.0230393, .0631636], [-.0282895, 1.0099416, .0210077], [.0122982, -.020483, 1.3299098]]), 3);\n  return [h[0], h[1], h[2]];\n}\n\nfunction K(t, r, e) {\n  const u = n(o([t, r, e], [[1.0478112, .0228866, -.050127], [.0295424, .9904844, -.0170491], [-.0092345, .0150436, .7521316]]), 3),\n        i = u[0],\n        s = u[1],\n        f = u[2],\n        d = n([i / c, s / a, f / l].map(n => n > A ? y(n) : ($ * n + 16) / 116), 3),\n        g = d[0],\n        h = d[1];\n  return [116 * h - 16, 500 * (g - h), 200 * (h - d[2])];\n}\n\nfunction N(n, t, r) {\n  const e = [S(I(t, 2) + I(r, 2)), g(p(r, t))];\n  return [n, e[0], e[1]];\n}\n\nfunction O(n, t, r) {\n  return [n, t * f(r), t * h(r)];\n}\n\nfunction Q(n, t) {\n  return function (n, t) {\n    const r = v(n, t),\n          e = M(n, t);\n    return (r * i + .05 * i) / (e * i + .05 * i);\n  }(R(...n), R(...t));\n}\n\nfunction R(n, t, r) {\n  return (U(n) * X + U(t) * Y + U(r) * Z) / i;\n}\n\nconst U = n => n <= 3.928 ? n / W : V(n),\n      V = n => I((n + 5.5) / 105.5, 2.4),\n      W = 1292,\n      X = .2126 * i,\n      Y = .7152 * i,\n      Z = .0722 * i;\n\nfunction _(t) {\n  const r = n(t.match(tn) || [], 9),\n        e = r[1],\n        u = r[2],\n        o = r[3],\n        i = r[4],\n        c = r[5],\n        a = r[6],\n        l = r[7],\n        s = r[8];\n\n  if (void 0 !== c || void 0 !== e) {\n    return [void 0 !== c ? parseInt(c, 16) : parseInt(e + e, 16), void 0 !== a ? parseInt(a, 16) : parseInt(u + u, 16), void 0 !== l ? parseInt(l, 16) : parseInt(o + o, 16), void 0 !== s ? parseInt(s, 16) : void 0 !== i ? parseInt(i + i, 16) : 255].map(n => 100 * n / 255);\n  }\n}\n\nfunction nn(n, t, r) {\n  return `#${((1 << 24) + (Math.round(255 * n / 100) << 16) + (Math.round(255 * t / 100) << 8) + Math.round(255 * r / 100)).toString(16).slice(1)}`;\n}\n\nconst tn = /^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;\n\nfunction rn(n) {\n  const t = en[String(n).toLowerCase()];\n  return t ? t.map(n => 100 * n / 255) : null;\n}\n\nconst en = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  transparent: [0, 0, 0],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\n\nfunction un([n, t, r], [e, u, o]) {\n  const c = S(I(t, 2) + I(r, 2)),\n        a = S(I(u, 2) + I(o, 2)),\n        l = e - n,\n        d = (n + e) / 2,\n        g = I((c + a) / 2, 7),\n        p = S(g / (g + I(25, 7))),\n        y = t + t / 2 * (1 - p),\n        b = u + u / 2 * (1 - p),\n        w = S(y * y + r * r),\n        v = S(b * b + o * o),\n        M = (w + v) / 2,\n        q = v - w,\n        x = 0 === y && 0 === r ? 0 : s(r, y) % 360,\n        A = 0 === b && 0 === o ? 0 : s(o, b) % 360;\n  let $, j, z;\n  0 === w || 0 === v ? ($ = 0, j = 0, z = x + A) : ($ = m(x - A) <= 180 ? A - x : A <= x ? A - x + 360 : A - x - 360, j = 2 * S(w * v) * h($ / 2), z = m(x - A) <= 180 ? (x + A) / 2 : x + A < 360 ? (x + A + 360) / 2 : (x + A - 360) / 2);\n  const C = 1 - .17 * i * f(z - 30) + .24 * i * f(2 * z) + .32 * i * f(3 * z + 6) - .2 * i * f(4 * z - 63) / i / i,\n        E = (d - 50) * (d - 50),\n        L = 1 + .015 * i * E / S(20 + E) / i,\n        P = 1 + .045 * i * M / i,\n        T = 1 + .015 * i * M * C / i,\n        B = 60 * k(-(z - 275) / 25 * ((z - 275) / 25)),\n        D = -2 * p * h(B),\n        F = l / (on * L),\n        G = q / (cn * P),\n        H = j / (an * T);\n  return S(F * F + G * G + H * H + D * G * H);\n}\n\nconst on = 1,\n      cn = 1,\n      an = 1;\n\nfunction ln(t, r, e) {\n  const u = n(T(t, r, e), 3),\n        o = n(K(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction sn(t, r, e) {\n  const u = n(J(t, r, e), 3),\n        o = n(B(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction fn(t, r, e) {\n  const u = n(T(t, r, e), 3),\n        o = n(K(u[0], u[1], u[2]), 3),\n        i = n(N(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction dn(t, r, e) {\n  const u = n(O(t, r, e), 3),\n        o = n(J(u[0], u[1], u[2]), 3),\n        i = n(B(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction gn(t, r, e) {\n  const u = n(G(t, r, e), 3),\n        o = n(F(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction hn(t, r, e) {\n  const u = n(D(t, r, e), 3),\n        o = n(H(t, u[1], u[2]), 3);\n  return [t, o[1], o[2]];\n}\n\nfunction mn(t, r, e) {\n  const u = n(z(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3),\n        i = n(K(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction pn(t, r, e, u) {\n  const o = n(J(t, r, e), 3),\n        i = n(B(o[0], o[1], o[2]), 3),\n        c = n(j(i[0], i[1], i[2], u), 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction yn(t, r, e) {\n  const u = n(z(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3),\n        i = n(K(o[0], o[1], o[2]), 3),\n        c = n(N(i[0], i[1], i[2]), 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction bn(t, r, e, u) {\n  const o = n(O(t, r, e), 3),\n        i = n(J(o[0], o[1], o[2]), 3),\n        c = n(B(i[0], i[1], i[2]), 3),\n        a = n(j(c[0], c[1], c[2], u), 3);\n  return [a[0], a[1], a[2]];\n}\n\nfunction kn(t, r, e) {\n  const u = n(z(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction wn(t, r, e, u) {\n  const o = n(B(t, r, e), 3),\n        i = n(j(o[0], o[1], o[2], u), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction vn(t, r, e) {\n  const u = n(E(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3),\n        i = n(K(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction Mn(t, r, e, u) {\n  const o = n(J(t, r, e), 3),\n        i = n(B(o[0], o[1], o[2]), 3),\n        c = n(C(i[0], i[1], i[2], u), 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction qn(t, r, e) {\n  const u = n(E(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3),\n        i = n(K(o[0], o[1], o[2]), 3),\n        c = n(N(i[0], i[1], i[2]), 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction In(t, r, e, u) {\n  const o = n(O(t, r, e), 3),\n        i = n(J(o[0], o[1], o[2]), 3),\n        c = n(B(i[0], i[1], i[2]), 3),\n        a = n(C(c[0], c[1], c[2], u), 3);\n  return [a[0], a[1], a[2]];\n}\n\nfunction xn(t, r, e) {\n  const u = n(E(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction Sn(t, r, e, u) {\n  const o = n(B(t, r, e), 3),\n        i = n(C(o[0], o[1], o[2], u), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction An(t, r, e) {\n  const u = n(P(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3),\n        i = n(K(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction $n(t, r, e, u) {\n  const o = n(J(t, r, e), 3),\n        i = n(B(o[0], o[1], o[2]), 3),\n        c = n(L(i[0], i[1], i[2], u), 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction jn(t, r, e) {\n  const u = n(P(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3),\n        i = n(K(o[0], o[1], o[2]), 3),\n        c = n(N(i[0], i[1], i[2]), 3);\n  return [c[0], c[1], c[2]];\n}\n\nfunction zn(t, r, e, u) {\n  const o = n(O(t, r, e), 3),\n        i = n(J(o[0], o[1], o[2]), 3),\n        c = n(B(i[0], i[1], i[2]), 3),\n        a = n(L(c[0], c[1], c[2], u), 3);\n  return [a[0], a[1], a[2]];\n}\n\nfunction Cn(t, r, e) {\n  const u = n(P(t, r, e), 3),\n        o = n(T(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction En(t, r, e, u) {\n  const o = n(B(t, r, e), 3),\n        i = n(L(o[0], o[1], o[2], u), 3);\n  return [i[0], i[1], i[2]];\n}\n\nfunction Ln(t, r, e) {\n  const u = n(K(t, r, e), 3),\n        o = n(N(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction Pn(t, r, e) {\n  const u = n(O(t, r, e), 3),\n        o = n(J(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\n\nfunction Tn(n) {\n  return j(..._(n));\n}\n\nfunction Bn(n) {\n  return L(..._(n));\n}\n\nfunction Dn(n) {\n  return C(..._(n));\n}\n\nfunction Fn(n) {\n  return ln(..._(n));\n}\n\nfunction Gn(n) {\n  return fn(..._(n));\n}\n\nfunction Hn(n) {\n  return T(..._(n));\n}\n\nfunction Jn(n, t, r) {\n  return nn(...z(n, t, r));\n}\n\nfunction Kn(n, t, r) {\n  return nn(...z(n, t, r));\n}\n\nfunction Nn(n, t, r) {\n  return nn(...E(n, t, r));\n}\n\nfunction On(n, t, r) {\n  return nn(...sn(n, t, r));\n}\n\nfunction Qn(n, t, r) {\n  return nn(...dn(n, t, r));\n}\n\nfunction Rn(n, t, r) {\n  return nn(...B(n, t, r));\n}\n\nfunction Un(n, t) {\n  return un(Fn(n), Fn(t));\n}\n\nfunction Vn(n, t) {\n  return un(mn(...n), mn(...t));\n}\n\nfunction Wn(n, t) {\n  return un(An(...n), An(...t));\n}\n\nfunction Xn(n, t) {\n  return un(vn(...n), vn(...t));\n}\n\nfunction Yn(n, t) {\n  return un(gt(n), gt(t));\n}\n\nfunction Zn(n, t) {\n  return un(O(...n), O(...t));\n}\n\nfunction _n(n, t) {\n  return un(ln(...n), ln(...t));\n}\n\nfunction nt(n, t) {\n  return un(K(...n), K(...t));\n}\n\nfunction tt(n, t) {\n  return Q(_(n), _(t));\n}\n\nfunction rt(n, t) {\n  return Q(z(...n), z(...t));\n}\n\nfunction et(n, t) {\n  return Q(P(...n), P(...t));\n}\n\nfunction ut(n, t) {\n  return Q(E(...n), E(...t));\n}\n\nfunction ot(n, t) {\n  return Q(rn(n), rn(t));\n}\n\nfunction it(n, t) {\n  return Q(sn(...n), sn(...t));\n}\n\nfunction ct(n, t) {\n  return Q(dn(...n), dn(...t));\n}\n\nfunction at(n, t) {\n  return Q(B(...n), B(...t));\n}\n\nfunction lt(n) {\n  return nn(...rn(n));\n}\n\nfunction st(n) {\n  return j(...rn(n));\n}\n\nfunction ft(n) {\n  return L(...rn(n));\n}\n\nfunction dt(n) {\n  return C(...rn(n));\n}\n\nfunction gt(n) {\n  return ln(...rn(n));\n}\n\nfunction ht(n) {\n  return fn(...rn(n));\n}\n\nfunction mt(n) {\n  return T(...rn(n));\n}\n\nexport { Un as hex2ciede, tt as hex2contrast, Tn as hex2hsl, Bn as hex2hsv, Dn as hex2hwb, Fn as hex2lab, Gn as hex2lch, _ as hex2rgb, Hn as hex2xyz, Vn as hsl2ciede, rt as hsl2contrast, Jn as hsl2hex, D as hsl2hsv, hn as hsl2hwb, mn as hsl2lab, yn as hsl2lch, z as hsl2rgb, kn as hsl2xyz, Wn as hsv2ciede, et as hsv2contrast, Kn as hsv2hex, F as hsv2hsl, H as hsv2hwb, An as hsv2lab, jn as hsv2lch, P as hsv2rgb, Cn as hsv2xyz, Xn as hwb2ciede, ut as hwb2contrast, Nn as hwb2hex, gn as hwb2hsl, G as hwb2hsv, vn as hwb2lab, qn as hwb2lch, E as hwb2rgb, xn as hwb2xyz, Yn as keyword2ciede, ot as keyword2contrast, lt as keyword2hex, st as keyword2hsl, ft as keyword2hsv, dt as keyword2hwb, gt as keyword2lab, ht as keyword2lch, rn as keyword2rgb, mt as keyword2xyz, un as lab2ciede, it as lab2contrast, On as lab2hex, pn as lab2hsl, $n as lab2hsv, Mn as lab2hwb, N as lab2lch, sn as lab2rgb, J as lab2xyz, Zn as lch2ciede, ct as lch2contrast, Qn as lch2hex, bn as lch2hsl, zn as lch2hsv, In as lch2hwb, O as lch2lab, dn as lch2rgb, Pn as lch2xyz, _n as rgb2ciede, Q as rgb2contrast, nn as rgb2hex, j as rgb2hsl, L as rgb2hsv, C as rgb2hwb, ln as rgb2lab, fn as rgb2lch, T as rgb2xyz, nt as xyz2ciede, at as xyz2contrast, Rn as xyz2hex, wn as xyz2hsl, En as xyz2hsv, Sn as xyz2hwb, K as xyz2lab, Ln as xyz2lch, B as xyz2rgb };","map":{"version":3,"sources":["src/util.js","src/rgb-hsl.js","src/rgb-hwb.js","src/rgb-hsv.js","src/rgb-xyz.js","src/hsl-hsv.js","src/hwb-hsv.js","src/lab-xyz.js","src/lab-lch.js","src/rgb-contrast.js","src/hex-rgb.js","src/keyword-rgb.js","src/lab-ciede.js","src/index.js"],"names":["rgb2hue","rgbR","rgbG","rgbB","fallbackhue","value","rgb2value","rgb2whiteness","delta","segment","hue2rgb","t1","t2","hue","rhue","relativeLuminance1","relativeLuminance2","l1","max","l2","min","precision","matrix","params","mats","map","mat","reduce","acc","index","wd50X","wd50Y","wd50Z","atan2d","y","x","rad2deg","atan2","cosd","cos","deg2rad","PI","sind","sin","abs","Math","cbrt","exp","floor","pow","sqrt","epsilon","kappa","rgb2hsl","hslH","hslV","hslW","hslD","hslL","hsl2rgb","hslS","rgb2hwb","hwb2rgb","hwbH","hwbW","hwbB","v","rgb2hsv","hsvV","hsvW","hsv2rgb","hsvH","hsvS","rgbI","rgbM","rgbN","rgb2xyz","xyz2rgb","xyzX","xyzY","xyzZ","hsl2hsv","hsv1","hsv2hsl","hwb2hsv","hsv2hwb","lab2xyz","labL","labA","labB","f2","f1","f3","initX","initY","initZ","xyz2lab","d50X","d50Y","d50Z","lab2lch","lch2lab","lchL","lchC","lchH","rgb2contrast","rgb1","rgb2","rgb2luminance","luminance2contrast","adjustChannel","coefficientR","coefficientG","coefficientB","lowc","adjustGamma","hex2rgb","hex","r","g","b","a","rr","gg","bb","aa","match","hexColorMatch","undefined","parseInt","c","rgb2hex","round","toString","slice","keyword2rgb","keyword","rgb255","keywords","String","toLowerCase","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","lab2ciede","L1","a1","b1","L2","a2","b2","c1","c2","deltaLPrime","lBar","cBarPow7","cCoeff","a1Prime","a2Prime","c1Prime","c2Prime","cBarPrime","deltaCPrime","h1Prime","h2Prime","deltaSmallHPrime","deltaBigHPrime","hBarPrime","T","slCoeff","sl","sc","sh","RtCoeff","Rt","term1","kl","term2","kc","term3","kh","rgb2lab","lab2rgb","rgb2lch","lch2rgb","hwb2hsl","hsl2hwb","hsl2lab","lab2hsl","hsl2lch","lch2hsl","hsl2xyz","xyz2hsl","hwb2lab","lab2hwb","hwb2lch","lch2hwb","hwb2xyz","xyz2hwb","hsv2lab","lab2hsv","hsv2lch","lch2hsv","hsv2xyz","xyz2hsv","xyz2lch","lch2xyz","hex2hsl","hex2hsv","hex2hwb","hex2lab","hex2lch","hex2xyz","hsl2hex","hsv2hex","hwb2hex","lab2hex","lch2hex","xyz2hex","hex2ciede","hex1","hex2","hsl2ciede","hsl1","hsl2","hsv2ciede","hsv2","hwb2ciede","hwb1","hwb2","keyword2ciede","keyword1","keyword2","keyword2lab","lch2ciede","lch1","lch2","rgb2ciede","xyz2ciede","xyz1","xyz2","hex2contrast","hsl2contrast","hsv2contrast","hwb2contrast","keyword2contrast","lab2contrast","lab1","lab2","lch2contrast","xyz2contrast","keyword2hex","keyword2hsl","keyword2hsv","keyword2hwb","keyword2lch","keyword2xyz"],"mappings":"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AAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,aAAAA,EAAAA,EAAAA,IAAAA,gBAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,WAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,CAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,OAAAA","sourcesContent":["/**\n* @private\n* @func rgb2hue\n* @desc Return a hue angle from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Red (0 - 100)\n* @param {Number} b - Red (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {Number} Hue Angle (0 - 360)\n* @example\n* rgb2hue(100, 0, 0)\n* @example\n* rgb2hue(100, 0, 0, 0)\n*/\n\nexport function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0) {\n\tconst value     = rgb2value(rgbR, rgbG, rgbB);\n\tconst whiteness = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst delta     = value - whiteness;\n\n\tif (delta) {\n\t\t// calculate segment\n\t\tconst segment = value === rgbR\n\t\t\t? (rgbG - rgbB) / delta\n\t\t: value === rgbG\n\t\t\t? (rgbB - rgbR) / delta\n\t\t: (rgbR - rgbG) / delta;\n\n\t\t// calculate shift\n\t\tconst shift = value === rgbR\n\t\t\t? segment < 0\n\t\t\t\t? 360 / 60\n\t\t\t\t: 0 / 60\n\t\t: value === rgbG\n\t\t\t? 120 / 60\n\t\t: 240 / 60;\n\n\t\t// calculate hue\n\t\tconst hue = (segment + shift) * 60;\n\n\t\treturn hue;\n\t} else {\n\t\t// otherwise return the Hue Fallback\n\t\treturn fallbackhue;\n\t}\n}\n\n/**\n* @private\n* @func hue2rgb\n* @desc Return an RGB channel from a hue angle\n* @param {Number} t1\n* @param {Number} t2\n* @param {Number} h - Hue Angle (0 - 360)\n* @return {Number} RGB channel (0 - 100)\n* @example\n* hue2rgb(0, 0, 0)\n*/\n\nexport function hue2rgb(t1, t2, hue) {\n\t// calculate the ranged hue\n\tconst rhue = hue < 0 ? hue + 360 : hue > 360 ? hue - 360 : hue;\n\n\t// calculate the rgb value\n\tconst rgb = rhue * 6 < 360\n\t\t? t1 + (t2 - t1) * rhue / 60\n\t: rhue * 2 < 360\n\t\t? t2\n\t: rhue * 3 < 720\n\t\t? t1 + (t2 - t1) * (240 - rhue) / 60\n\t: t1;\n\n\treturn rgb;\n}\n\n/**\n* @private\n* @func luminance2contrast\n* @desc Return the contrast ratio between 2 luminance.\n* @param {Number} l1 - Relative luminance of one color\n* @param {Number} l2 - Relative luminance of another color\n* @return {Number} Contrast ratio between the 2 luminance\n* @example\n* luminance2contrast(0.2126, 0) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport function luminance2contrast(relativeLuminance1, relativeLuminance2) {\n\t// l1 is the relative luminance of the lighter of the colors\n\tconst l1 = max(relativeLuminance1, relativeLuminance2);\n\n\t// l1 is the relative luminance of the darker of the colors\n\tconst l2 = min(relativeLuminance1, relativeLuminance2);\n\n\treturn (l1 * precision + 0.05 * precision) / (l2 * precision + 0.05 * precision);\n}\n\n\n/* RGB tooling\n/* ========================================================================== */\n\nexport function rgb2value(rgbR, rgbG, rgbB) {\n\tconst value = max(rgbR, rgbG, rgbB);\n\n\treturn value;\n}\n\nexport function rgb2whiteness(rgbR, rgbG, rgbB) {\n\tconst whiteness = min(rgbR, rgbG, rgbB);\n\n\treturn whiteness;\n}\n\n/* Math matrix\n/* ========================================================================== */\n\nexport function matrix(params, mats) {\n\treturn mats.map(\n\t\tmat => mat.reduce(\n\t\t\t// (acc, value, index) => acc + params[index] * value,\n\t\t\t(acc, value, index) => acc + params[index] * precision * (value * precision) / precision / precision,\n\t\t\t0\n\t\t)\n\t);\n}\n\n/* Precision\n/* ========================================================================== */\n\nexport const precision = 100000000;\n\n/* D50 reference white\n/* ========================================================================== */\n\nexport const [ wd50X, wd50Y, wd50Z ] = [ 96.42, 100, 82.49 ];\n\n/* Math Expressions\n/* ========================================================================== */\n\nexport const atan2d = (y, x) => rad2deg(atan2(y, x)); // arc-tangent in degrees\nexport const cosd = x => cos(deg2rad(x)); // cosine of the specified angle in degrees\nexport const deg2rad = x => x * PI / 180; // degree to radian\nexport const rad2deg = x => x * 180 / PI; // radian to degree\nexport const sind = x => sin(deg2rad(x)); // sine in degrees\n\n/* Math Constants\n/* ========================================================================== */\n\nexport const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cbrt = Math.cbrt;\nexport const cos = Math.cos;\nexport const exp = Math.exp;\nexport const floor = Math.floor;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const PI = Math.PI;\nexport const pow = Math.pow;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = pow(6, 3) / pow(29, 3);\nexport const kappa = pow(29, 3) / pow(3, 3);\n","import { abs, rgb2hue, rgb2value, rgb2whiteness, hue2rgb } from './util';\n\n/**\n* @func rgb2hsl\n* @desc Return a HSL color from an RGB color\n* @param {Number} r - red (0 - 100)\n* @param {Number} g - green (0 - 100)\n* @param {Number} b - blue (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* rgb2hsl(0, 100, 100) // => [0, 100, 50]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hslH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hslV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hslW = rgb2whiteness(rgbR, rgbG, rgbB);\n\n\t// calculate value/whiteness delta\n\tconst hslD = hslV - hslW;\n\n\t// calculate lightness\n\tconst hslL = (hslV + hslW) / 2;\n\n\t// calculate saturation\n\tconst hslS = hslD === 0 ? 0 : hslD / (100 - abs(2 * hslL - 100)) * 100;\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2rgb\n* @desc Return an RGB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsl2rgb(0, 100, 50) // => [0, 100, 100]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function hsl2rgb(hslH, hslS, hslL) {\n\t// calcuate t2\n\tconst t2 = hslL <= 50 ? hslL * (hslS + 100) / 100 : hslL + hslS - hslL * hslS / 100;\n\n\t// calcuate t1\n\tconst t1 = hslL * 2 - t2;\n\n\t// calculate rgb\n\tconst [ rgbR, rgbG, rgbB ] = [\n\t\thue2rgb(t1, t2, hslH + 120),\n\t\thue2rgb(t1, t2, hslH),\n\t\thue2rgb(t1, t2, hslH - 120)\n\t];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { rgb2hue, rgb2whiteness, rgb2value } from './util';\nimport { hsl2rgb } from './rgb-hsl';\n\n/**\n* @func rgb2hwb\n* @desc Return an HWB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {ArrayHWB}\n* @example\n* rgb2hwb(100, 0, 0) // => [0, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hwbH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hwbW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hwbV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hwbB = 100 - hwbV;\n\n\treturn [hwbH, hwbW, hwbB];\n}\n\n/**\n* @func hwb2rgb\n* @desc Return an RGB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hwb2rgb(0, 0, 0) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hwbH, 100, 50, fallbackhue).map(\n\t\tv => v * (100 - hwbW - hwbB) / 100 + hwbW\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { floor, rgb2value, rgb2whiteness, rgb2hue } from './util';\n\n/**\n* @func rgb2hsv\n* @desc Return an HSV color from an RGB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSV}\n* @example\n* rgb2hsv(100, 0, 0) // => [0, 100, 100]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hsvV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hsvW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hsvH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\n\t// calculate saturation\n\tconst hsvS = hsvV === hsvW ? 0 : (hsvV - hsvW) / hsvV * 100;\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2rgb\n* @desc Return an RGB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsv2rgb(100, 0, 0) // => [100, 0, 0]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function hsv2rgb(hsvH, hsvS, hsvV) {\n\tconst rgbI = floor(hsvH / 60);\n\n\t// calculate rgb parts\n\tconst rgbF = hsvH / 60 - rgbI & 1 ? hsvH / 60 - rgbI : 1 - hsvH / 60 - rgbI;\n\tconst rgbM = hsvV * (100 - hsvS) / 100;\n\tconst rgbN = hsvV * (100 - hsvS * rgbF) / 100;\n\n\tconst [ rgbR, rgbG, rgbB ] = rgbI === 5\n\t\t? [ hsvV, rgbM, rgbN ]\n\t: rgbI === 4\n\t\t? [ rgbN, rgbM, hsvV ]\n\t: rgbI === 3\n\t\t? [ rgbM, rgbN, hsvV ]\n\t: rgbI === 2\n\t\t? [ rgbM, hsvV, rgbN ]\n\t: rgbI === 1\n\t\t? [ rgbN, hsvV, rgbM ]\n\t: [ hsvV, rgbN, rgbM ];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { matrix, pow } from './util';\n\n/**\n* @func rgb2xyz\n* @desc Return an XYZ color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* rgb2xyz(100, 0, 0) // => [41.25, 21.27, 1.93]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function rgb2xyz(rgbR, rgbG, rgbB) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = [ rgbR, rgbG, rgbB ].map(\n\t\tv => v > 4.045 ? pow((v + 5.5) / 105.5, 2.4) * 100 : v / 12.92\n\t);\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix([ lrgbR, lrgbB, lrgbG ], [\n\t\t[0.4124564, 0.3575761, 0.1804375],\n\t\t[0.2126729, 0.7151522, 0.0721750],\n\t\t[0.0193339, 0.1191920, 0.9503041]\n\t]);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2rgb\n* @desc Return an XYZ color from an RGB color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayRGB}\n* @example\n* xyz2rgb(41.25, 21.27, 1.93) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function xyz2rgb(xyzX, xyzY, xyzZ) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 3.2404542, -1.5371385, -0.4985314],\n\t\t[-0.9692660,  1.8760108,  0.0415560],\n\t\t[ 0.0556434, -0.2040259,  1.0572252]\n\t]);\n\n\tconst [ rgbR, rgbG, rgbB ] = [ lrgbR, lrgbB, lrgbG ].map(\n\t\tv => v > 0.31308 ? 1.055 * pow(v / 100, 1 / 2.4) * 100 - 5.5 : 12.92 * v\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","/**\n* @func hsl2hsv\n* @desc Return an HSV color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hsl2hsv(0, 100, 50)\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsl2hsv(hslH, hslS, hslL) {\n\tconst hsv1 = hslS * (hslL < 50 ? hslL : 100 - hslL) / 100;\n\tconst hsvS = hsv1 === 0 ? 0 : 2 * hsv1 / (hslL + hsv1) * 100;\n\tconst hsvV = hslL + hsv1;\n\n\treturn [ hslH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2hsl\n* @desc Return an HSL color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hsv2hsl(0, 0, 0) // => [0, 100, 50]\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsv2hsl(hsvH, hsvS, hsvV) {\n\tconst hslL = (200 - hsvS) * hsvV / 100;\n\n\tconst [ hslS, hslV ] = [\n\t\thslL === 0 || hslL === 200 ? 0 : hsvS * hsvV / 100 / (hslL <= 100 ? hslL : 200 - hslL) * 100,\n\t\thslL * 5 / 10\n\t];\n\n\treturn [ hsvH, hslS, hslV ];\n}\n","/**\n* @func hwb2hsv\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hwb2hsv(0, 0, 0) // => [0, 100, 100]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hwb2hsv(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = [\n\t\thwbH,\n\t\thwbB === 100 ? 0 : 100 - hwbW / (100 - hwbB) * 100,\n\t\t100 - hwbB\n\t];\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n\n/**\n* @func hsv2hwb\n* @desc Return an HWB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsv2hwb(0, 100, 100) // => [0, 0, 0]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hsv2hwb(hsvH, hsvS, hsvV) {\n\tconst [ hwbH, hwbW, hwbB ] = [\n\t\thsvH,\n\t\t(100 - hsvS) * hsvV / 100,\n\t\t100 - hsvV\n\t];\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n","import { cbrt, epsilon, kappa, pow, wd50X, wd50Y, wd50Z, matrix } from './util';\n\n/**\n* @func lab2xyz\n* @desc Return an XYZ color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayXYZ}\n* @example\n* lab2xyz(54.29, 80.82, 69.88) // => 41.25, 21.27, 1.93\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function lab2xyz(labL, labA, labB) {\n\t// compute f, starting with the luminance-related term\n\tconst f2 = (labL + 16) / 116;\n\tconst f1 = labA / 500 + f2;\n\tconst f3 = f2 - labB / 200;\n\n\t// compute pre-scaled XYZ\n\tconst [ initX, initY, initZ ] = [\n\t\tpow(f1, 3) > epsilon   ? pow(f1, 3)                : (116 * f1 - 16) / kappa,\n\t\tlabL > kappa * epsilon ? pow((labL + 16) / 116, 3) : labL / kappa,\n\t\tpow(f3, 3) > epsilon   ? pow(f3, 3)                : (116 * f3 - 16) / kappa\n\t];\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix(\n\t\t// compute XYZ by scaling pre-scaled XYZ by reference white\n\t\t[ initX * wd50X, initY * wd50Y, initZ * wd50Z ],\n\t\t// calculate D65 XYZ from D50 XYZ\n\t\t[\n\t\t\t[ 0.9555766, -0.0230393,  0.0631636],\n\t\t\t[-0.0282895,  1.0099416,  0.0210077],\n\t\t\t[ 0.0122982, -0.0204830,  1.3299098]\n\t\t]\n\t);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2lab\n* @desc Return an LAB color from a XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLAB}\n* @example\n* xyz2lab(41.25, 21.27, 1.93) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function xyz2lab(xyzX, xyzY, xyzZ) {\n\t// calculate D50 XYZ from D65 XYZ\n\tconst [ d50X, d50Y, d50Z ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 1.0478112,  0.0228866, -0.0501270],\n\t\t[ 0.0295424,  0.9904844, -0.0170491],\n\t\t[-0.0092345,  0.0150436,  0.7521316]\n\t]);\n\n\t// calculate f\n\tconst [ f1, f2, f3 ] = [\n\t\td50X / wd50X,\n\t\td50Y / wd50Y,\n\t\td50Z / wd50Z\n\t].map(\n\t\tvalue => value > epsilon ? cbrt(value) : (kappa * value + 16) / 116\n\t);\n\n\tconst [ labL, labA, labB ] = [\n\t\t116 * f2 - 16,\n\t\t500 * (f1 - f2),\n\t\t200 * (f2 - f3)\n\t];\n\n\treturn [ labL, labA, labB ];\n}\n","import { atan2, cosd, pow, rad2deg, sind, sqrt } from './util';\n\n/**\n* @func lab2lch\n* @desc Return an LCH color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayLAB}\n* @example\n* lab2lch(54.29, 80.82, 69.88) // => [54.29, 106.84, 40.85]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lab2lch(labL, labA, labB) {\n\tconst [ lchC, lchH ] = [\n\t\tsqrt(pow(labA, 2) + pow(labB, 2)), // convert to chroma\n\t\trad2deg(atan2(labB, labA)) // convert to hue, in degrees\n\t];\n\n\treturn [ labL, lchC, lchH ];\n}\n\n/**\n* @func lch2lab\n* @desc Return a LAB color from an LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2lab(54.29, 106.84, 40.85) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lch2lab(lchL, lchC, lchH) {\n\t// convert to Lab a and b from the polar form\n\tconst [ labA, labB ] = [\n\t\tlchC * cosd(lchH),\n\t\tlchC * sind(lchH)\n\t];\n\n\treturn [ lchL, labA, labB ];\n}\n","import { luminance2contrast, pow, precision } from './util'\n\n/**\n* @func rgb2contrast\n* @desc Return the contrast ratio of of RGB colors\n* @param {ArrayRGB} rgb1 - RGB Color Array\n* @param {ArrayRGB} rgb2 - RGB Color Array\n* @return {NumberContrast}\n* @example\n* rgb2contrast([100, 0, 0], [0, 0, 0]) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport default function rgb2contrast(rgb1, rgb2) {\n\tconst luminance1 = rgb2luminance(...rgb1);\n\tconst luminance2 = rgb2luminance(...rgb2);\n\n\treturn luminance2contrast(luminance1, luminance2);\n}\n\n/**\n* @private\n* @func rgb2luminance\n* @desc Return the relative brightness of RGB\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {Number} Relative luminance of the color\n* @example\n* rgb2luminance(100, 0, 0) // => 0.2126\n* @link https://www.w3.org/TR/WCAG21/#dfn-relative-luminance\n*/\n\nexport function rgb2luminance(rgbR, rgbG, rgbB) {\n\treturn (adjustChannel(rgbR) * coefficientR + adjustChannel(rgbG) * coefficientG + adjustChannel(rgbB) * coefficientB) / precision;\n}\n\n// low-gamma adjust coefficients\nconst adjustChannel = x => x <= 3.928 ? x / lowc : adjustGamma(x);\nconst adjustGamma = x => pow((x + 5.5) / 105.5, 2.4);\nconst lowc = 1292;\n\n// red/green/blue coefficients\nconst coefficientR = 0.2126 * precision;\nconst coefficientG = 0.7152 * precision;\nconst coefficientB = 0.0722 * precision;\n","/**\n* @func hex2rgb\n* @desc Return an RGBA color from a Hex color.\n* @param {StringHex} hex\n* @return {ArrayRGBA}\n* @example\n* hex2rgb(\"#f00\") // => [100, 0, 0, 100]\n* hex2rgb(\"#f00f\") // => [100, 0, 0, 100]\n* @example\n* hex2rgb(\"#ff0000\") // => [100, 0, 0, 100]\n* hex2rgb(\"#ff0000ff\") // => [100, 0, 0, 100]\n*/\n\nexport function hex2rgb(hex) {\n\t// #<hex-color>{3,4,6,8}\n\tconst [, r, g, b, a, rr, gg, bb, aa] = hex.match(hexColorMatch) || [];\n\n\tif (rr !== undefined || r !== undefined) {\n\t\tconst red   = rr !== undefined ? parseInt(rr, 16) : parseInt(r + r, 16);\n\t\tconst green = gg !== undefined ? parseInt(gg, 16) : parseInt(g + g, 16);\n\t\tconst blue  = bb !== undefined ? parseInt(bb, 16) : parseInt(b + b, 16);\n\t\tconst alpha = aa !== undefined ? parseInt(aa, 16) : a !== undefined ? parseInt(a + a, 16) : 255;\n\n\t\treturn [red, green, blue, alpha].map(c => c * 100 / 255);\n\t}\n\n\treturn undefined;\n}\n\n/**\n* @func rgb2hex\n* @desc Return a HEX color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {StringHex}\n* @example\n* rgb2hex(100, 0, 0) // => \"#ff0000\"\n*/\n\nexport function rgb2hex(rgbR, rgbG, rgbB) {\n\treturn `#${((1 << 24) + (Math.round(rgbR * 255 / 100) << 16) + (Math.round(rgbG * 255 / 100) << 8) + Math.round(rgbB * 255 / 100)).toString(16).slice(1)}`;\n}\n\nconst hexColorMatch = /^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;\n","/**\n* @func keyword2rgb\n* @desc Return an RGB color from a CSS keyword color\n* @param {StringKeyword} keyword\n* @return {ArrayRGB}\n* @example\n* keyword2rgb('red') // => [100, 0, 0]\n*/\n\nexport default function keyword2rgb(keyword) {\n\tconst rgb255 = keywords[String(keyword).toLowerCase()];\n\n\treturn rgb255 ? rgb255.map(x => x * 100 / 255) : null;\n}\n\nconst keywords = {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\ttransparent: [0, 0, 0],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n};\n","import { abs, atan2d, cosd, exp, pow, sind, sqrt, precision } from './util';\n\n/* Return\n/* ========================================================================== */\n\n/**\n* @func lab2ciede\n* @desc Return the CIEDE2000 difference between 2 CIE LAB colors (International Commission on Illumination, Delta E).\n* @param {Array} lab1 - CIE LAB color\n* @param {Number} lab1.0 - Lightness\n* @param {Number} lab1.1 - Red/Green Coordinate\n* @param {Number} lab1.2 - Yellow/Blue Coordinate\n* @param {Array} lab2 - CIE LAB color\n* @param {Number} lab2.0 - Lightness\n* @param {Number} lab2.1 - Red/Green Coordinate\n* @param {Number} lab2.2 - Yellow/Blue Coordinate\n* @return {NumberCIEDE}\n* @example\n* lab2ciede([97.14, -21.56, 94.48], [0, 0, 0]) // => 100\n* @link https://en.wikipedia.org/wiki/Color_difference#CIEDE2000\n*/\n\nexport default function lab2ciede([L1, a1, b1], [L2, a2, b2]) {\n\tconst c1 = sqrt(pow(a1, 2) + pow(b1, 2));\n\tconst c2 = sqrt(pow(a2, 2) + pow(b2, 2));\n\n\tconst deltaLPrime = L2 - L1;\n\n\tconst lBar = (L1 + L2) / 2;\n\tconst cBar = (c1 + c2) / 2;\n\n\tconst cBarPow7 = pow(cBar, 7);\n\tconst cCoeff = sqrt(cBarPow7 / (cBarPow7 + pow(25, 7)));\n\tconst a1Prime = a1 + a1 / 2 * (1 - cCoeff);\n\tconst a2Prime = a2 + a2 / 2 * (1 - cCoeff);\n\n\tconst c1Prime = sqrt(a1Prime * a1Prime + b1 * b1);\n\tconst c2Prime = sqrt(a2Prime * a2Prime + b2 * b2);\n\tconst cBarPrime = (c1Prime + c2Prime) / 2;\n\tconst deltaCPrime = c2Prime - c1Prime;\n\n\tconst h1Prime = a1Prime === 0 && b1 === 0 ? 0 : atan2d(b1, a1Prime) % 360;\n\tconst h2Prime = a2Prime === 0 && b2 === 0 ? 0 : atan2d(b2, a2Prime) % 360;\n\n\tlet deltaSmallHPrime;\n\tlet deltaBigHPrime;\n\tlet hBarPrime;\n\n\tif (c1Prime === 0 || c2Prime === 0) {\n\t\tdeltaSmallHPrime = 0;\n\t\tdeltaBigHPrime = 0;\n\t\thBarPrime = h1Prime + h2Prime;\n\t} else {\n\t\tdeltaSmallHPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? h2Prime - h1Prime\n\t\t: h2Prime <= h1Prime\n\t\t\t? h2Prime - h1Prime + 360\n\t\t: h2Prime - h1Prime - 360;\n\n\t\tdeltaBigHPrime = 2 * sqrt(c1Prime * c2Prime) * sind(deltaSmallHPrime / 2);\n\n\t\thBarPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? (h1Prime + h2Prime) / 2\n\t\t: h1Prime + h2Prime < 360\n\t\t\t? (h1Prime + h2Prime + 360) / 2\n\t\t: (h1Prime + h2Prime - 360) / 2;\n\t}\n\n\tconst T = 1 - 0.17 * precision * cosd(hBarPrime - 30) + 0.24 * precision * cosd(2 * hBarPrime) + 0.32 * precision * cosd(3 * hBarPrime + 6) - 0.2 * precision * cosd(4 * hBarPrime - 63) / precision / precision;\n\n\tconst slCoeff = (lBar - 50) * (lBar - 50);\n\tconst sl = 1 + 0.015 * precision * slCoeff / sqrt(20 + slCoeff) / precision;\n\tconst sc = 1 + 0.045 * precision * cBarPrime / precision;\n\tconst sh = 1 + 0.015 * precision * cBarPrime * T / precision;\n\n\tconst RtCoeff = 60 * exp(-((hBarPrime - 275) / 25) * ((hBarPrime - 275) / 25));\n\tconst Rt = -2 * cCoeff * sind(RtCoeff);\n\n\tconst term1 = deltaLPrime / (kl * sl);\n\tconst term2 = deltaCPrime / (kc * sc);\n\tconst term3 = deltaBigHPrime / (kh * sh);\n\tconst term4 = Rt * term2 * term3;\n\n\treturn sqrt(term1 * term1 + term2 * term2 + term3 * term3 + term4);\n}\n\n// weight factors\nconst kl = 1;\nconst kc = 1;\nconst kh = 1;\n","import { rgb2hsl, hsl2rgb } from './rgb-hsl';\nimport { rgb2hwb, hwb2rgb } from './rgb-hwb';\nimport { rgb2hsv, hsv2rgb } from './rgb-hsv';\nimport { rgb2xyz, xyz2rgb } from './rgb-xyz';\nimport { hsl2hsv, hsv2hsl } from './hsl-hsv';\nimport { hwb2hsv, hsv2hwb } from './hwb-hsv';\nimport { lab2xyz, xyz2lab } from './lab-xyz';\nimport { lab2lch, lch2lab } from './lab-lch';\nimport rgb2contrast from './rgb-contrast';\nimport { hex2rgb, rgb2hex } from './hex-rgb';\nimport keyword2rgb from './keyword-rgb';\nimport lab2ciede from './lab-ciede';\n\n/* Convert between RGB and Lab\n/* ========================================================================== */\n\n/**\n* @func rgb2lab\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLAB}\n* @example\n* rgb2lab(100, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction rgb2lab(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2rgb\n* @desc Return an RGB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayRGBA}\n* @example\n* lab2rgb(54.29, 80.82, 69.88) // => [100, 0, 0]\n*/\n\nfunction lab2rgb(labL, labA, labB) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between RGB and LCH\n/* ========================================================================== */\n\n/**\n* @func rgb2lch\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLCH}\n* @example\n* rgb2lch(100, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction rgb2lch(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2rgb\n* @desc Return an RGB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue\n* @return {ArrayRGBA}\n* @example\n* lch2rgb(54.29, 106.84, 40.85) // => [100, 0, 0]\n*/\n\nfunction lch2rgb(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between HSL and HWB\n/* ========================================================================== */\n\n/**\n* @func hwb2hsl\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hwb2hsl(0, 0, 0) // => [0, 0, 100]\n*/\n\nfunction hwb2hsl(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = hwb2hsv(hwbH, hwbW, hwbB);\n\tconst [ hslH, hslS, hslL ] = hsv2hsl(hsvH, hsvS, hsvV);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2hwb\n* @desc Return an HWB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsl2hwb(0, 0, 100) // => [0, 0, 0]\n*/\n\nfunction hsl2hwb(hslH, hslS, hslL) {\n\tconst [ , hsvS, hsvV ] = hsl2hsv(hslH, hslS, hslL);\n\tconst [ , hwbW, hwbB ] = hsv2hwb(hslH, hsvS, hsvV);\n\n\treturn [ hslH, hwbW, hwbB ];\n}\n\n/* Convert between HSL and Lab\n/* ========================================================================== */\n\n/**\n* @func hsl2lab\n* @desc Return a CIE LAB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsl2lab(0, 100, 50) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsl2lab(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsl\n* @desc Return a HSL color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* lab2hsl(54.29, 80.82, 69.88) // => [0, 100, 50]\n*/\n\nfunction lab2hsl(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and LCH\n/* ========================================================================== */\n\n/**\n* @func hsl2lch\n* @desc Return a CIE LCH color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsl2lch(0, 100, 50) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsl2lch(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsl\n* @desc Return an HSL from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hsl(54.29, 106.84, 40.85) // => [0, 100, 50]\n*/\n\nfunction lch2hsl(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsl2xyz\n* @desc Return an XYZ color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsl2xyz(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsl2xyz(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsl\n* @desc Return an HSL color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSL}\n* @example\n* xyz2hsl(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HWB and Lab\n/* ========================================================================== */\n\n/**\n* @func hwb2lab\n* @desc Return a CIE LAB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hwb2lab(0, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hwb2lab(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hwb\n* @desc Return an HWB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHWB}\n* @example\n* lab2hwb(54.29, 80.82, 69.88) // => [0, 0, 0]\n*/\n\nfunction lab2hwb(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and LCH\n/* ========================================================================== */\n\n/**\n* @func hwb2lch\n* @desc Return a CIE LCH color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hwb2lch(0, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hwb2lch(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hwb\n* @desc Return an HWB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hwb(54.29, 106.84, 40.85) // => [0, 0, 0]\n*/\n\nfunction lch2hwb(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and XYZ\n/* ========================================================================== */\n\n/**\n* @func hwb2xyz\n* @desc Return an XYZ color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hwb2xyz(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hwb2xyz(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hwb\n* @desc Return an HWB color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayXYZ}\n* @example\n* xyz2hwb(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HSV and Lab\n/* ========================================================================== */\n\n/**\n* @func hsv2lab\n* @desc Return a CIE LAB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsv2lab(0, 100, 100) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsv2lab(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsv\n* @desc Return an HSV color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHSV}\n* @example\n* lab2hsv(54.29, 80.82, 69.88) // => [0, 100, 100]\n*/\n\nfunction lab2hsv(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and LCH\n/* ========================================================================== */\n\n/**\n* @func hsv2lch\n* @desc Return a CIE LCH color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsv2lch(0, 100, 100) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsv2lch(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsv\n* @desc Return an HSV color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayHSV}\n* @example\n* lch2hsv(54.29, 106.84, 40.85) // => [0, 100, 100]\n*/\n\nfunction lch2hsv(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsv2xyz\n* @desc Return an XYZ color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsv2xyz(0, 100, 100) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsv2xyz(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsv\n* @desc Return an XYZ color from an HSV color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSV}\n* @example\n* xyz2hsv(41.25, 21.27, 1.93) // => [0, 100, 100]\n*/\n\nfunction xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between XYZ and LCH\n/* ========================================================================== */\n\n/**\n* @func xyz2lch\n* @desc Return a CIE LCH color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLCH}\n* @example\n* xyz2lch(41.25, 21.27, 1.93) // => [54.29, 106.84, 40.85]\n*/\n\nfunction xyz2lch(xyzX, xyzY, xyzZ) {\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2xyz\n* @desc Return an XYZ color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayXYZ}\n* @example\n* lch2xyz(54.29, 106.84, 40.85) // => [41.25, 21.27, 1.93]\n*/\n\nfunction lch2xyz(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/* Hex input conversions\n/* ========================================================================== */\n\n/**\n* @func hex2hsl\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSL}\n* @example\n* hex2hsl(\"#f00\") // => [0, 100, 50]\n*/\n\nfunction hex2hsl(hex) {\n\treturn rgb2hsl(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hsv\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSV}\n* @example\n* hex2hsv(\"#f00\") // => [0, 100, 100]\n*/\n\nfunction hex2hsv(hex) {\n\treturn rgb2hsv(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hwb\n* @desc Return an HWB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHWB}\n* @example\n* hex2hwb(\"#f00\") // => [0, 0, 0]\n*/\n\nfunction hex2hwb(hex) {\n\treturn rgb2hwb(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lab\n* @desc Return a CIE LAB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLAB}\n* @example\n* hex2lab(\"#f00\") // => [54.29, 80.82, 69.88]\n*/\n\nfunction hex2lab(hex) {\n\treturn rgb2lab(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lch\n* @desc Return a CIE LCH color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLCH}\n* @example\n* hex2lch(\"#f00\") // => [54.29, 106.84, 40.85]\n*/\n\nfunction hex2lch(hex) {\n\treturn rgb2lch(...hex2rgb(hex));\n}\n\n/**\n* @func hex2xyz\n* @desc Return an XYZ color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayXYZ}\n* @example\n* hex2xyz(\"#f00\") // => [41.25, 21.27, 1.93]\n*/\n\nfunction hex2xyz(hex) {\n\treturn rgb2xyz(...hex2rgb(hex));\n}\n\n/* Hex output conversions\n/* ========================================================================== */\n\n/**\n* @func hsl2hex\n* @desc Return a Hex color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {StringHex}\n* @example\n* hsl2hex(0, 100, 50) // => \"#f00\"\n*/\n\nfunction hsl2hex(hslH, hslS, hslL) {\n\treturn rgb2hex(...hsl2rgb(hslH, hslS, hslL));\n}\n\n/**\n* @func hsv2hex\n* @desc Return a Hex color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {StringHex}\n* @example\n* hsv2hex(0, 100, 100) // => \"#f00\"\n*/\n\nfunction hsv2hex(hsvH, hsvS, hsvV) {\n\treturn rgb2hex(...hsl2rgb(hsvH, hsvS, hsvV));\n}\n\n/**\n* @func hwb2hex\n* @desc Return a Hex color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {StringHex}\n* @example\n* hwb2hex(0, 0, 0) // => \"#f00\"\n*/\n\nfunction hwb2hex(hwbH, hwbW, hwbB) {\n\treturn rgb2hex(...hwb2rgb(hwbH, hwbW, hwbB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 80.82, 69.88) // => \"#f00\"\n*/\n\nfunction lab2hex(labL, labA, labB) {\n\treturn rgb2hex(...lab2rgb(labL, labA, labB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 106.84, 40.85) // => \"#f00\"\n*/\n\nfunction lch2hex(lchL, lchC, lchH) {\n\treturn rgb2hex(...lch2rgb(lchL, lchC, lchH));\n}\n\n/**\n* @func xyz2hex\n* @desc Return a Hex color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {StringHex}\n* @example\n* xyz2hex(41.25, 21.27, 1.93) // => \"#f00\"\n*/\n\nfunction xyz2hex(xyzX, xyzY, xyzZ) {\n\treturn rgb2hex(...xyz2rgb(xyzX, xyzY, xyzZ));\n}\n\n/* CIEDE conversions\n/* ========================================================================== */\n\n/**\n* @func hex2ciede\n* @desc Return the CIEDE2000 difference between 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberCIEDE}\n* @example\n* hex2ciede('#fff', '#000') // => 100\n*/\n\nfunction hex2ciede(hex1, hex2) {\n\treturn lab2ciede(hex2lab(hex1), hex2lab(hex2));\n}\n\n/**\n* @func hsl2ciede\n* @desc Return the CIEDE2000 difference between 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberCIEDE}\n* @example\n* hsl2ciede([0, 0, 100], [0, 0, 0]) // => 100\n*/\n\nfunction hsl2ciede(hsl1, hsl2) {\n\treturn lab2ciede(hsl2lab(...hsl1), hsl2lab(...hsl2));\n}\n\n/**\n* @func hsv2ciede\n* @desc Return the CIEDE2000 difference between 2 HSV colors\n* @param {ArrayHSV} hsl1\n* @param {ArrayHSV} hsl2\n* @return {NumberCIEDE}.\n* @example\n* hsv2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hsv2ciede(hsv1, hsv2) {\n\treturn lab2ciede(hsv2lab(...hsv1), hsv2lab(...hsv2));\n}\n\n/**\n* @func hwb2ciede\n* @desc Return the CIEDE2000 difference between 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberCIEDE}.\n* @example\n* hwb2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hwb2ciede(hwb1, hwb2) {\n\treturn lab2ciede(hwb2lab(...hwb1), hwb2lab(...hwb2));\n}\n\n/**\n* @func keyword2ciede\n* @desc Return the CIEDE2000 difference between 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberCIEDE}.\n* @example\n* keyword2ciede('white', 'black') // => 100\n*/\n\nfunction keyword2ciede(keyword1, keyword2) {\n\treturn lab2ciede(keyword2lab(keyword1), keyword2lab(keyword2));\n}\n\n/**\n* @func lch2ciede\n* @desc Return the CIEDE2000 difference between 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberCIEDE}.\n* @example\n* lch2ciede([100, 0.03, -82.2], [0, 0, 0]) // => 100\n*/\n\nfunction lch2ciede(lch1, lch2) {\n\treturn lab2ciede(lch2lab(...lch1), lch2lab(...lch2));\n}\n\n/**\n* @func rgb2ciede\n* @desc Return the CIEDE2000 difference between 2 RGB colors\n* @param {ArrayRGB} rgb1\n* @param {ArrayRGB} rgb2\n* @return {NumberCIEDE}.\n* @example\n* rgb2ciede([100, 100, 100], [0, 0, 0]) // => 100\n*/\n\nfunction rgb2ciede(rgb1, rgb2) {\n\treturn lab2ciede(rgb2lab(...rgb1), rgb2lab(...rgb2));\n}\n\n/**\n* @func xyz2ciede\n* @desc Return the CIEDE2000 difference between 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberCIEDE}.\n* @example\n* xyz2ciede([95.05, 100, 108.88], [0, 0, 0]) // => 100\n*/\n\nfunction xyz2ciede(xyz1, xyz2) {\n\treturn lab2ciede(xyz2lab(...xyz1), xyz2lab(...xyz2));\n}\n\n/* Contrast conversions\n/* ========================================================================== */\n\n/**\n* @func hex2contrast\n* @desc Return the contrast ratio of 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberContrast}\n* @example\n* rgb2contrast(\"#fff\", '#000') // => 21\n*/\n\nfunction hex2contrast(hex1, hex2) {\n\treturn rgb2contrast(hex2rgb(hex1), hex2rgb(hex2));\n}\n\n/**\n* @func hsl2contrast\n* @desc Return the contrast ratio of 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberContrast}\n* @example\n* hsl2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsl2contrast(hsl1, hsl2) {\n\treturn rgb2contrast(hsl2rgb(...hsl1), hsl2rgb(...hsl2));\n}\n\n/**\n* @func hsv2contrast\n* @desc Return the contrast ratio of 2 HSV colors\n* @param {ArrayHSV} hsv1\n* @param {ArrayHSV} hsv2\n* @return {NumberContrast}\n* @example\n* hsv2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsv2contrast(hsv1, hsv2) {\n\treturn rgb2contrast(hsv2rgb(...hsv1), hsv2rgb(...hsv2));\n}\n\n/**\n* @func hwb2contrast\n* @desc Return the contrast ratio of 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberContrast}\n* @example\n* hwb2contrast([0, 100, 0], [0, 0, 100]) // => 21\n*/\n\nfunction hwb2contrast(hwb1, hwb2) {\n\treturn rgb2contrast(hwb2rgb(...hwb1), hwb2rgb(...hwb2));\n}\n\n/**\n* @func keyword2contrast\n* @desc Return the contrast ratio of 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberContrast}\n* @example\n* keyword2contrast('white', 'black') // => 21\n*/\n\nfunction keyword2contrast(keyword1, keyword2) {\n\treturn rgb2contrast(keyword2rgb(keyword1), keyword2rgb(keyword2));\n}\n\n/**\n* @func lab2contrast\n* @desc Return the contrast ratio of 2 LAB colors\n* @param {ArrayLAB} lab1\n* @param {ArrayLAB} lab2\n* @return {NumberContrast}\n* @example\n* lab2contrast([100, 0.003, -0.025], [0, 0, 0]) // => 21\n*/\n\nfunction lab2contrast(lab1, lab2) {\n\treturn rgb2contrast(lab2rgb(...lab1), lab2rgb(...lab2));\n}\n\n/**\n* @func lch2contrast\n* @desc Return the contrast ratio of 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberContrast}\n* @example\n* lch2contrast([100, 0.025, -82.2], [0, 0, 0]) // => 21\n*/\n\nfunction lch2contrast(lch1, lch2) {\n\treturn rgb2contrast(lch2rgb(...lch1), lch2rgb(...lch2));\n}\n\n/**\n* @func xyz2contrast\n* @desc Return the contrast ratio of 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberContrast}\n* @example\n* xyz2contrast([95.05, 100, 108.88], [0, 0, 0]) // => 21\n*/\n\nfunction xyz2contrast(xyz1, xyz2) {\n\treturn rgb2contrast(xyz2rgb(...xyz1), xyz2rgb(...xyz2));\n}\n\n/* Keyword Conversions\n/* ========================================================================== */\n\n/**\n* @func keyword2hex\n* @desc Return an RGB color from a keyword color\n* @param {StringKeyword} keyword - CSS Color Keyword\n* @return {String}\n* @example\n* keyword2hex('white') // => \"#ffffff\"\n*/\n\nfunction keyword2hex(keyword) {\n\treturn rgb2hex(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsl\n* @desc Return an HSL color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSL}\n* @example\n* keyword2hsl('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsl(keyword) {\n\treturn rgb2hsl(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsv\n* @desc Return an HSV color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSV}\n* @example\n* keyword2hsv('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsv(keyword) {\n\treturn rgb2hsv(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hwb\n* @desc Return an HWB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHWB}\n* @example\n* keyword2hwb('red') // => [0, 0, 0]\n*/\n\nfunction keyword2hwb(keyword) {\n\treturn rgb2hwb(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lab\n* @desc Return a CIE LAB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLAB}\n* @example\n* keyword2lab('red') // => [54.29, 80.82, 69.88]\n*/\n\nfunction keyword2lab(keyword) {\n\treturn rgb2lab(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return a CIE LCH color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLCH}\n* @example\n* keyword2lch('red') // => [54.29, 106.84, 40.85]\n*/\n\nfunction keyword2lch(keyword) {\n\treturn rgb2lch(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return an XYZ color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayXYZ}\n* @example\n* keyword2lch('red') // => [41.25, 21.27, 1.93]\n*/\n\nfunction keyword2xyz(keyword) {\n\treturn rgb2xyz(...keyword2rgb(keyword));\n}\n\n/* All Conversions\n/* ========================================================================== */\n\nexport {\n\thex2ciede,\n\thex2contrast,\n\thex2hsl,\n\thex2hsv,\n\thex2hwb,\n\thex2lab,\n\thex2lch,\n\thex2rgb,\n\thex2xyz,\n\n\thsl2ciede,\n\thsl2contrast,\n\thsl2hex,\n\thsl2hsv,\n\thsl2hwb,\n\thsl2lab,\n\thsl2lch,\n\thsl2rgb,\n\thsl2xyz,\n\n\thsv2ciede,\n\thsv2contrast,\n\thsv2hex,\n\thsv2hsl,\n\thsv2hwb,\n\thsv2lab,\n\thsv2lch,\n\thsv2rgb,\n\thsv2xyz,\n\n\thwb2ciede,\n\thwb2contrast,\n\thwb2hex,\n\thwb2hsl,\n\thwb2hsv,\n\thwb2lab,\n\thwb2lch,\n\thwb2rgb,\n\thwb2xyz,\n\n\tkeyword2ciede,\n\tkeyword2contrast,\n\tkeyword2hex,\n\tkeyword2hsl,\n\tkeyword2hsv,\n\tkeyword2hwb,\n\tkeyword2lab,\n\tkeyword2lch,\n\tkeyword2rgb,\n\tkeyword2xyz,\n\n\tlab2ciede,\n\tlab2contrast,\n\tlab2hex,\n\tlab2hsl,\n\tlab2hsv,\n\tlab2hwb,\n\tlab2lch,\n\tlab2rgb,\n\tlab2xyz,\n\n\tlch2ciede,\n\tlch2contrast,\n\tlch2hex,\n\tlch2hsl,\n\tlch2hsv,\n\tlch2hwb,\n\tlch2lab,\n\tlch2rgb,\n\tlch2xyz,\n\n\trgb2ciede,\n\trgb2contrast,\n\trgb2hex,\n\trgb2hsl,\n\trgb2hsv,\n\trgb2hwb,\n\trgb2lab,\n\trgb2lch,\n\trgb2xyz,\n\n\txyz2ciede,\n\txyz2contrast,\n\txyz2hex,\n\txyz2hsl,\n\txyz2hsv,\n\txyz2hwb,\n\txyz2lab,\n\txyz2lch,\n\txyz2rgb\n};\n\n/**\n* @typedef {Array} ArrayRGB\n* An array of red, green, and blue channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n*\n*/\n/**\n* @typedef {Array} ArrayRGBA\n* An array of red, green, blue, and alpha channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n* @property {Number} 3 - Alpha (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSL\n* An array of hue, saturation, and lightness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Lightness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSV\n* An array of hue, saturation, and value channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Value (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayLAB\n* An array of CIELAB lightness, red/green, and yellow/blue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - Red/Green Coordinate\n* @property {Number} 2 - Yellow/Blue Coordinate\n*/\n/**\n* @typedef {Array} ArrayLCH\n* An array of CIELAB lightness, chroma, and hue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - CIE Chroma\n* @property {Number} 2 - CIE Hue\n*/\n/**\n* @typedef {Array} ArrayHWB\n* An array of hue, whiteness, and blackness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Whiteness (0 - 100)\n* @property {Number} 2 - Blackness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayXYZ\n* An array of CIELAB chromacity.\n* @property {Number} 0 - X Chromacity\n* @property {Number} 1 - Y Chromacity\n* @property {Number} 2 - Z Chromacity\n* @example\n* [95.05, 100, 108.88]\n* @example\n* [0, 0, 0]\n*/\n/**\n* @typedef {String} StringHex\n* A string representing the 3, 4, 6, or 8 digit hexidecimal color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {String} StringKeyword\n* A case-insensitive string identifier that represents a specific color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {Number} NumberContrast\n* A contrast ratio of the colors (0 - 21)\n* @example\n* 0\n* @example\n* 21\n*/\n/**\n* @typedef {Number} NumberCIEDE\n* A CIEDE2000 difference between 2 colors (0 - 100)\n* @example\n* 0\n* @example\n* 100\n*/\n"]},"metadata":{},"sourceType":"module"}